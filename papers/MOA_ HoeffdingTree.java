<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0077)http://www.cs.waikato.ac.nz/~abifet/MOA/API/_hoeffding_tree_8java_source.html -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>MOA: HoeffdingTree.java Source File</title>
<link href="./MOA_ HoeffdingTree_files/tabs.css" rel="stylesheet" type="text/css">
<link href="./MOA_ HoeffdingTree_files/search.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="./MOA_ HoeffdingTree_files/search.js"></script>
<link href="./MOA_ HoeffdingTree_files/navtree.css" rel="stylesheet" type="text/css">
<script type="text/javascript" src="./MOA_ HoeffdingTree_files/jquery.js"></script>
<script type="text/javascript" src="./MOA_ HoeffdingTree_files/navtree.js"></script>
<script type="text/javascript" src="./MOA_ HoeffdingTree_files/resize.js"></script>
<script type="text/javascript">
$(document).ready(initResizable);
</script>
<link href="./MOA_ HoeffdingTree_files/doxygen.css" rel="stylesheet" type="text/css">
<link rel="stylesheet" id="coToolbarStyle" href="chrome-extension://cjabmdjcfcfdmffimndhafhblfmpjdpe/toolbar/styles/placeholder.css" type="text/css"><script type="text/javascript" id="cosymantecbfw_removeToolbar">(function () {				var toolbarElement = {},					parent = {},					interval = 0,					retryCount = 0,					isRemoved = false;				if (window.location.protocol === 'file:') {					interval = window.setInterval(function () {						toolbarElement = document.getElementById('coFrameDiv');						if (toolbarElement) {							parent = toolbarElement.parentNode;							if (parent) {								parent.removeChild(toolbarElement);								isRemoved = true;								if (document.body && document.body.style) {									document.body.style.setProperty('margin-top', '0px', 'important');								}							}						}						retryCount += 1;						if (retryCount > 10 || isRemoved) {							window.clearInterval(interval);						}					}, 10);				}			})();</script><script type="text/javascript" id="waxCS">var WAX = function () { var _arrInputs; return { getElement: function (i) { return _arrInputs[i]; }, setElement: function(i){ _arrInputs=i; } } }(); function waxGetElement(i) { return WAX.getElement(i); } function coSetPageData(t, d){ if('wax'==t) { WAX.setElement(d);} }</script><script type="text/javascript" id="waxCS">var WAX = function () { var _arrInputs; return { getElement: function (i) { return _arrInputs[i]; }, setElement: function(i){ _arrInputs=i; } } }(); function waxGetElement(i) { return WAX.getElement(i); } function coSetPageData(t, d){ if('wax'==t) { WAX.setElement(d);} }</script></head>
<body onload="searchBox.OnSelectItem(0);">
<!-- Generated by Doxygen 1.7.4 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<script type="text/javascript">
function hasClass(ele,cls) {
  return ele.className.match(new RegExp('(\\s|^)'+cls+'(\\s|$)'));
}

function addClass(ele,cls) {
  if (!this.hasClass(ele,cls)) ele.className += " "+cls;
}

function removeClass(ele,cls) {
  if (hasClass(ele,cls)) {
    var reg = new RegExp('(\\s|^)'+cls+'(\\s|$)');
    ele.className=ele.className.replace(reg,' ');
  }
}

function toggleVisibility(linkObj) {
 var base = linkObj.getAttribute('id');
 var summary = document.getElementById(base + '-summary');
 var content = document.getElementById(base + '-content');
 var trigger = document.getElementById(base + '-trigger');
 if ( hasClass(linkObj,'closed') ) {
   summary.style.display = 'none';
   content.style.display = 'block';
   trigger.src = 'open.png';
   removeClass(linkObj,'closed');
   addClass(linkObj,'opened');
 } else if ( hasClass(linkObj,'opened') ) {
   summary.style.display = 'block';
   content.style.display = 'none';
   trigger.src = 'closed.png';
   removeClass(linkObj,'opened');
   addClass(linkObj,'closed');
 }
 return false;
}
</script>
<div id="top">
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="./MOA_ HoeffdingTree_files/LogoMOA.jpg"></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">MOA&nbsp;<span id="projectnumber">12.03</span></div>
   <div id="projectbrief">Real Time Analytics for Data Streams</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/namespaces.html"><span>Packages</span></a></li>
      <li><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/files.html"><span>Files</span></a></li>
      <li><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/dirs.html"><span>Directories</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="./MOA_ HoeffdingTree_files/mag_sel.png" onmouseover="return searchBox.OnSearchSelectShow()" onmouseout="return searchBox.OnSearchSelectHide()" alt="">
          <input type="text" id="MSearchField" value="Search" accesskey="S" onfocus="searchBox.OnSearchFieldFocus(true)" onblur="searchBox.OnSearchFieldFocus(false)" onkeyup="searchBox.OnSearchFieldChange(event)">
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="./MOA_ HoeffdingTree_files/close.png" alt=""></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/files.html"><span>File&nbsp;List</span></a></li>
    </ul>
  </div>
</div>
<div id="side-nav" class="ui-resizable side-nav-resizable" style="width: 300px; height: 391px; top: 230px;">
  <div id="nav-tree" style="height: 391px;">
    <div id="nav-tree-contents">
    <ul><li><div class="item"><a href="javascript:void(0)"><img src="./MOA_ HoeffdingTree_files/ftv2mlastnode.png" border="0"></a><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/index.html">MOA</a></span></div><ul class="children_ul" style=""><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><a href="javascript:void(0)"><img src="./MOA_ HoeffdingTree_files/ftv2pnode.png" border="0"></a><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/annotated.html">Class List</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classes.html">Class Index</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><a href="javascript:void(0)"><img src="./MOA_ HoeffdingTree_files/ftv2pnode.png" border="0"></a><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/hierarchy.html">Class Hierarchy</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/functions.html">Class Members</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><a href="javascript:void(0)"><img src="./MOA_ HoeffdingTree_files/ftv2pnode.png" border="0"></a><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/namespaces.html">Packages</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><a href="javascript:void(0)"><img src="./MOA_ HoeffdingTree_files/ftv2mnode.png" border="0"></a><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/files.html">File List</a></span></div><ul class="children_ul" style=""><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_abstract_classifier_8java.html">AbstractClassifier.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_abstract_class_option_8java.html">AbstractClassOption.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_abstract_clusterer_8java.html">AbstractClusterer.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_abstract_m_o_a_object_8java.html">AbstractMOAObject.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_abstract_option_8java.html">AbstractOption.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_abstract_option_handler_8java.html">AbstractOptionHandler.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_abstract_stream_filter_8java.html">AbstractStreamFilter.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_abstract_tab_panel_8java.html">AbstractTabPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_abstract_task_8java.html">AbstractTask.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_accuracy_8java.html">Accuracy.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_accuracy_updated_ensemble_8java.html">AccuracyUpdatedEnsemble.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_accuracy_weighted_ensemble_8java.html">AccuracyWeightedEnsemble.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_active_classifier_8java.html">ActiveClassifier.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_ada_hoeffding_option_tree_8java.html">AdaHoeffdingOptionTree.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_add_noise_filter_8java.html">AddNoiseFilter.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_a_d_w_i_n_8java.html">ADWIN.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_agrawal_generator_8java.html">AgrawalGenerator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_arff_file_stream_8java.html">ArffFileStream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_a_s_hoeffding_tree_8java.html">ASHoeffdingTree.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_attribute_class_observer_8java.html">AttributeClassObserver.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_attribute_split_suggestion_8java.html">AttributeSplitSuggestion.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_auto_class_discovery_8java.html">AutoClassDiscovery.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_auto_expand_vector_8java.html">AutoExpandVector.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/clustream_2_auxiliary_functions_8java.html">clustream/AuxiliaryFunctions.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/clustree_2util_2_auxiliary_functions_8java.html">clustree/util/AuxiliaryFunctions.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_a_w_t_interactive_renderer_8java.html">AWTInteractiveRenderer.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_a_w_t_renderable_8java.html">AWTRenderable.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_a_w_t_renderer_8java.html">AWTRenderer.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_basic_classification_performance_evaluator_8java.html">BasicClassificationPerformanceEvaluator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_basic_clustering_performance_evaluator_8java.html">BasicClusteringPerformanceEvaluator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_basic_regression_performance_evaluator_8java.html">BasicRegressionPerformanceEvaluator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_batch_cmd_8java.html">BatchCmd.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_binary_tree_numeric_attribute_class_observer_8java.html">BinaryTreeNumericAttributeClassObserver.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_bucket_manager_8java.html">BucketManager.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_budget_8java.html">Budget.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_cached_instances_stream_8java.html">CachedInstancesStream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_cache_shuffled_stream_8java.html">CacheShuffledStream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_c_f_cluster_8java.html">CFCluster.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_classification_measure_collection_8java.html">ClassificationMeasureCollection.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_classification_performance_evaluator_8java.html">ClassificationPerformanceEvaluator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_classification_tab_panel_8java.html">ClassificationTabPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_classifier_8java.html">Classifier.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_class_option_8java.html">ClassOption.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_class_option_edit_component_8java.html">ClassOptionEditComponent.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_class_option_selection_panel_8java.html">ClassOptionSelectionPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clus_kernel_8java.html">ClusKernel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_cluster_8java.html">Cluster.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clusterer_8java.html">Clusterer.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_cluster_event_8java.html">ClusterEvent.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_cluster_event_listener_8java.html">ClusterEventListener.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_cluster_generator_8java.html">ClusterGenerator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clustering_8java.html">Clustering.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clustering_algo_panel_8java.html">ClusteringAlgoPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clustering_eval_panel_8java.html">ClusteringEvalPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clustering_setup_tab_8java.html">ClusteringSetupTab.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clustering_stream_8java.html">ClusteringStream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clustering_tab_panel_8java.html">ClusteringTabPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clustering_visual_eval_panel_8java.html">ClusteringVisualEvalPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clustering_visual_tab_8java.html">ClusteringVisualTab.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_cluster_panel_8java.html">ClusterPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clustream_8java.html">Clustream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clustream_kernel_8java.html">ClustreamKernel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_clus_tree_8java.html">ClusTree.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_c_m_m_8java.html">CMM.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_c_m_m___g_t_analysis_8java.html">CMM_GTAnalysis.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_cob_web_8java.html">CobWeb.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_concept_drift_real_stream_8java.html">ConceptDriftRealStream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_concept_drift_stream_8java.html">ConceptDriftStream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_data_point_8java.html">DataPoint.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_d_d_m_8java.html">DDM.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_decision_stump_8java.html">DecisionStump.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_den_stream_8java.html">DenStream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_discrete_attribute_class_observer_8java.html">DiscreteAttributeClassObserver.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_do_task_8java.html">DoTask.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/clusterers_2clustree_2util_2_double_vector_8java.html">clusterers/clustree/util/DoubleVector.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/core_2_double_vector_8java.html">core/DoubleVector.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_drift_detection_method_8java.html">DriftDetectionMethod.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_e_d_d_m_8java.html">EDDM.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_entropy_collection_8java.html">EntropyCollection.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_entry_8java.html">Entry.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_evaluate_clustering_8java.html">EvaluateClustering.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_evaluate_interleaved_chunks_8java.html">EvaluateInterleavedChunks.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_evaluate_interleaved_test_then_train_8java.html">EvaluateInterleavedTestThenTrain.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_evaluate_model_8java.html">EvaluateModel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_evaluate_periodic_held_out_test_8java.html">EvaluatePeriodicHeldOutTest.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_evaluate_prequential_8java.html">EvaluatePrequential.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_e_w_m_a_classification_performance_evaluator_8java.html">EWMAClassificationPerformanceEvaluator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_f1_8java.html">F1.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_fading_factor_classification_performance_evaluator_8java.html">FadingFactorClassificationPerformanceEvaluator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_failed_task_report_8java.html">FailedTaskReport.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_file_extension_filter_8java.html">FileExtensionFilter.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_file_option_8java.html">FileOption.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_file_option_edit_component_8java.html">FileOptionEditComponent.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_file_stream_8java.html">FileStream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_filtered_stream_8java.html">FilteredStream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_flag_option_8java.html">FlagOption.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_flag_option_edit_component_8java.html">FlagOptionEditComponent.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_float_option_8java.html">FloatOption.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_float_option_edit_component_8java.html">FloatOptionEditComponent.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/clustream_2cern_2_gamma_8java.html">clustream/cern/Gamma.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/clustree_2util_2_gamma_8java.html">clustree/util/Gamma.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_gaussian_estimator_8java.html">GaussianEstimator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_gaussian_numeric_attribute_class_observer_8java.html">GaussianNumericAttributeClassObserver.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_general_8java.html">General.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_gini_split_criterion_8java.html">GiniSplitCriterion.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_globals_8java.html">Globals.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_graph_axes_8java.html">GraphAxes.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_graph_canvas_8java.html">GraphCanvas.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_graph_curve_8java.html">GraphCurve.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_greenwald_khanna_numeric_attribute_class_observer_8java.html">GreenwaldKhannaNumericAttributeClassObserver.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_greenwald_khanna_quantile_summary_8java.html">GreenwaldKhannaQuantileSummary.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_g_u_i_8java.html">GUI.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_g_u_i_defaults_8java.html">GUIDefaults.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_g_u_i_utils_8java.html">GUIUtils.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_hoeffding_adaptive_tree_8java.html">HoeffdingAdaptiveTree.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_hoeffding_option_tree_8java.html">HoeffdingOptionTree.java</a></span></div></li><li><div class="item selected" id="selected"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_hoeffding_tree_8java.html">HoeffdingTree.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_hyperplane_generator_8java.html">HyperplaneGenerator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_info_gain_split_criterion_8java.html">InfoGainSplitCriterion.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_info_panel_8java.html">InfoPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_input_stream_progress_monitor_8java.html">InputStreamProgressMonitor.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_instance_conditional_binary_test_8java.html">InstanceConditionalBinaryTest.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_instance_conditional_test_8java.html">InstanceConditionalTest.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_instances_header_8java.html">InstancesHeader.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_instance_stream_8java.html">InstanceStream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_int_option_8java.html">IntOption.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_int_option_edit_component_8java.html">IntOptionEditComponent.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_k_means_8java.html">KMeans.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_learning_curve_8java.html">LearningCurve.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_learning_evaluation_8java.html">LearningEvaluation.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_learning_performance_evaluator_8java.html">LearningPerformanceEvaluator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_learn_model_8java.html">LearnModel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_l_e_d_generator_8java.html">LEDGenerator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_l_e_d_generator_drift_8java.html">LEDGeneratorDrift.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_leveraging_bag_8java.html">LeveragingBag.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_lim_att_classifier_8java.html">LimAttClassifier.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_lim_att_hoeffding_tree_8java.html">LimAttHoeffdingTree.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_line_graph_view_panel_8java.html">LineGraphViewPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_list_option_8java.html">ListOption.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_main_task_8java.html">MainTask.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_majority_class_8java.html">MajorityClass.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_make_object_8java.html">MakeObject.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_measure_collection_8java.html">MeasureCollection.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_measurement_8java.html">Measurement.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_measure_stream_speed_8java.html">MeasureStreamSpeed.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_membership_matrix_8java.html">MembershipMatrix.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_meta_multilabel_generator_8java.html">MetaMultilabelGenerator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_micro_cluster_8java.html">MicroCluster.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_miniball_8java.html">Miniball.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_misc_utils_8java.html">MiscUtils.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classifiers_2meta_2_m_o_a_8java.html">classifiers/meta/MOA.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/datagenerators_2classifiers_2classification_2_m_o_a_8java.html">datagenerators/classifiers/classification/MOA.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_m_o_a_class_option_editor_8java.html">MOAClassOptionEditor.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_m_o_a_object_8java.html">MOAObject.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_m_o_a_utils_8java.html">MOAUtils.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_m_t_random_8java.html">MTRandom.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_multi_choice_option_8java.html">MultiChoiceOption.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_multi_choice_option_edit_component_8java.html">MultiChoiceOptionEditComponent.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_multilabel_arff_file_stream_8java.html">MultilabelArffFileStream.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_multilabel_instance_8java.html">MultilabelInstance.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_multilabel_instances_header_8java.html">MultilabelInstancesHeader.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_naive_bayes_8java.html">NaiveBayes.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_naive_bayes_multinomial_8java.html">NaiveBayesMultinomial.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_node_8java.html">Node.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_nominal_attribute_binary_test_8java.html">NominalAttributeBinaryTest.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_nominal_attribute_class_observer_8java.html">NominalAttributeClassObserver.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_nominal_attribute_multiway_test_8java.html">NominalAttributeMultiwayTest.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_null_attribute_class_observer_8java.html">NullAttributeClassObserver.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_null_monitor_8java.html">NullMonitor.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_numeric_attribute_binary_test_8java.html">NumericAttributeBinaryTest.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_numeric_attribute_class_observer_8java.html">NumericAttributeClassObserver.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_object_repository_8java.html">ObjectRepository.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_o_c_boost_8java.html">OCBoost.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_option_8java.html">Option.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_option_edit_component_8java.html">OptionEditComponent.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_option_handler_8java.html">OptionHandler.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_options_8java.html">Options.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_options_configuration_panel_8java.html">OptionsConfigurationPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_oza_bag_8java.html">OzaBag.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_oza_bag_adwin_8java.html">OzaBagAdwin.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_oza_bag_a_s_h_t_8java.html">OzaBagASHT.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_oza_boost_8java.html">OzaBoost.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_oza_boost_adwin_8java.html">OzaBoostAdwin.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_perceptron_8java.html">Perceptron.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_plot_8java.html">Plot.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_point_8java.html">Point.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_point_panel_8java.html">PointPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/clustream_2cern_2_polynomial_8java.html">clustream/cern/Polynomial.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/clustree_2util_2_polynomial_8java.html">clustree/util/Polynomial.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_preview_panel_8java.html">PreviewPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_properties_reader_8java.html">PropertiesReader.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_random_hoeffding_tree_8java.html">RandomHoeffdingTree.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_random_r_b_f_generator_8java.html">RandomRBFGenerator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_random_r_b_f_generator_drift_8java.html">RandomRBFGeneratorDrift.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_random_r_b_f_generator_events_8java.html">RandomRBFGeneratorEvents.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_random_tree_generator_8java.html">RandomTreeGenerator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_result_preview_listener_8java.html">ResultPreviewListener.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_run_tasks_8java.html">RunTasks.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_run_visualizer_8java.html">RunVisualizer.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_s_e_a_generator_8java.html">SEAGenerator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_serialize_utils_8java.html">SerializeUtils.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_s_g_d_8java.html">SGD.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_silhouette_coefficient_8java.html">SilhouetteCoefficient.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_simple_budget_8java.html">SimpleBudget.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_single_classifier_drift_8java.html">SingleClassifierDrift.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_size_of_8java.html">SizeOf.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_s_pegasos_8java.html">SPegasos.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_sphere_cluster_8java.html">SphereCluster.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_split_criterion_8java.html">SplitCriterion.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_s_s_q_8java.html">SSQ.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_s_t_a_g_g_e_r_generator_8java.html">STAGGERGenerator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_standard_task_monitor_8java.html">StandardTaskMonitor.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_statistical_collection_8java.html">StatisticalCollection.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_stream_filter_8java.html">StreamFilter.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_stream_k_m_8java.html">StreamKM.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_stream_panel_8java.html">StreamPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_string_option_8java.html">StringOption.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_string_option_edit_component_8java.html">StringOptionEditComponent.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_string_utils_8java.html">StringUtils.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_task_8java.html">Task.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_task_completion_listener_8java.html">TaskCompletionListener.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_task_launcher_8java.html">TaskLauncher.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_task_manager_panel_8java.html">TaskManagerPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_task_monitor_8java.html">TaskMonitor.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_task_text_viewer_panel_8java.html">TaskTextViewerPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_task_thread_8java.html">TaskThread.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_text_viewer_panel_8java.html">TextViewerPanel.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_timestamp_8java.html">Timestamp.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_timing_utils_8java.html">TimingUtils.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_tree_coreset_8java.html">TreeCoreset.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_v_f_m_l_numeric_attribute_class_observer_8java.html">VFMLNumericAttributeClassObserver.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_waveform_generator_8java.html">WaveformGenerator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_waveform_generator_drift_8java.html">WaveformGeneratorDrift.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_weighted_majority_algorithm_8java.html">WeightedMajorityAlgorithm.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_w_e_k_a_classifier_8java.html">WEKAClassifier.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_w_e_k_a_class_option_8java.html">WEKAClassOption.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_w_e_k_a_class_option_edit_component_8java.html">WEKAClassOptionEditComponent.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_weka_clustering_algorithm_8java.html">WekaClusteringAlgorithm.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_weka_explorer_8java.html">WekaExplorer.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_window_classification_performance_evaluator_8java.html">WindowClassificationPerformanceEvaluator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2node.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_window_regression_performance_evaluator_8java.html">WindowRegressionPerformanceEvaluator.java</a></span></div></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2vertline.png" border="0"><img src="./MOA_ HoeffdingTree_files/ftv2lastnode.png" border="0"><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_write_stream_to_a_r_f_f_file_8java.html">WriteStreamToARFFFile.java</a></span></div></li></ul></li><li><div class="item"><img src="./MOA_ HoeffdingTree_files/ftv2blank.png" border="0"><a href="javascript:void(0)"><img src="./MOA_ HoeffdingTree_files/ftv2plastnode.png" border="0"></a><span class="label"><a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/dirs.html">Directories</a></span></div></li></ul></li></ul></div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" class="ui-resizable-handle" unselectable="on">
  </div>
<div class="ui-resizable-handle ui-resizable-e" unselectable="on"></div><div class="ui-resizable-handle ui-resizable-s" unselectable="on"></div><div class="ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se" style="z-index: 1001;" unselectable="on"></div></div>
<script type="text/javascript">
  initNavTree('_hoeffding_tree_8java.html','');
</script>
<div id="doc-content" style="margin-left: 306px; height: 391px;">
<div class="header">
  <div class="headertitle">
<div class="title">HoeffdingTree.java</div>  </div>
</div>
<div class="contents">
<a href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_hoeffding_tree_8java.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> *    HoeffdingTree.java</span>
<a name="l00003"></a>00003 <span class="comment"> *    Copyright (C) 2007 University of Waikato, Hamilton, New Zealand</span>
<a name="l00004"></a>00004 <span class="comment"> *    @author Richard Kirkby (rkirkby@cs.waikato.ac.nz)</span>
<a name="l00005"></a>00005 <span class="comment"> *</span>
<a name="l00006"></a>00006 <span class="comment"> *    This program is free software; you can redistribute it and/or modify</span>
<a name="l00007"></a>00007 <span class="comment"> *    it under the terms of the GNU General Public License as published by</span>
<a name="l00008"></a>00008 <span class="comment"> *    the Free Software Foundation; either version 3 of the License, or</span>
<a name="l00009"></a>00009 <span class="comment"> *    (at your option) any later version.</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> *    This program is distributed in the hope that it will be useful,</span>
<a name="l00012"></a>00012 <span class="comment"> *    but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
<a name="l00013"></a>00013 <span class="comment"> *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
<a name="l00014"></a>00014 <span class="comment"> *    GNU General Public License for more details.</span>
<a name="l00015"></a>00015 <span class="comment"> *</span>
<a name="l00016"></a>00016 <span class="comment"> *    You should have received a copy of the GNU General Public License</span>
<a name="l00017"></a>00017 <span class="comment"> *    along with this program. If not, see &lt;http://www.gnu.org/licenses/&gt;.</span>
<a name="l00018"></a>00018 <span class="comment"> *    </span>
<a name="l00019"></a>00019 <span class="comment"> */</span>
<a name="l00020"></a>00020 <span class="keyword">package </span>moa.classifiers.trees;
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="keyword">import</span> java.util.Arrays;
<a name="l00023"></a>00023 <span class="keyword">import</span> java.util.Comparator;
<a name="l00024"></a>00024 <span class="keyword">import</span> java.util.HashSet;
<a name="l00025"></a>00025 <span class="keyword">import</span> java.util.LinkedList;
<a name="l00026"></a>00026 <span class="keyword">import</span> java.util.List;
<a name="l00027"></a>00027 <span class="keyword">import</span> java.util.Set;
<a name="l00028"></a>00028 
<a name="l00029"></a>00029 <span class="keyword">import</span> moa.AbstractMOAObject;
<a name="l00030"></a>00030 <span class="keyword">import</span> moa.classifiers.AbstractClassifier;
<a name="l00031"></a>00031 <span class="keyword">import</span> moa.classifiers.bayes.NaiveBayes;
<a name="l00032"></a>00032 <span class="keyword">import</span> moa.classifiers.core.attributeclassobservers.AttributeClassObserver;
<a name="l00033"></a>00033 <span class="keyword">import</span> moa.classifiers.core.AttributeSplitSuggestion;
<a name="l00034"></a>00034 <span class="keyword">import</span> moa.classifiers.core.attributeclassobservers.DiscreteAttributeClassObserver;
<a name="l00035"></a>00035 <span class="keyword">import</span> moa.classifiers.core.conditionaltests.InstanceConditionalTest;
<a name="l00036"></a>00036 <span class="keyword">import</span> moa.classifiers.core.attributeclassobservers.NullAttributeClassObserver;
<a name="l00037"></a>00037 <span class="keyword">import</span> moa.classifiers.core.attributeclassobservers.NumericAttributeClassObserver;
<a name="l00038"></a>00038 <span class="keyword">import</span> moa.classifiers.core.splitcriteria.SplitCriterion;
<a name="l00039"></a>00039 <span class="keyword">import</span> moa.core.AutoExpandVector;
<a name="l00040"></a>00040 <span class="keyword">import</span> moa.core.DoubleVector;
<a name="l00041"></a>00041 <span class="keyword">import</span> moa.core.Measurement;
<a name="l00042"></a>00042 <span class="keyword">import</span> moa.core.StringUtils;
<a name="l00043"></a>00043 <span class="keyword">import</span> moa.options.ClassOption;
<a name="l00044"></a>00044 <span class="keyword">import</span> moa.options.FlagOption;
<a name="l00045"></a>00045 <span class="keyword">import</span> moa.options.FloatOption;
<a name="l00046"></a>00046 <span class="keyword">import</span> moa.options.IntOption;
<a name="l00047"></a>00047 <span class="keyword">import</span> moa.core.SizeOf;
<a name="l00048"></a>00048 <span class="keyword">import</span> moa.options.*;
<a name="l00049"></a>00049 <span class="keyword">import</span> weka.core.Instance;
<a name="l00050"></a>00050 <span class="keyword">import</span> weka.core.Utils;
<a name="l00051"></a>00051 
<a name="l00096"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html">00096</a> <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html" title="Hoeffding Tree or VFDT.">HoeffdingTree</a> <span class="keyword">extends</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1_abstract_classifier.html" title="Abstract Classifier.">AbstractClassifier</a> {
<a name="l00097"></a>00097 
<a name="l00098"></a>00098     <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keywordtype">long</span> serialVersionUID = 1L;
<a name="l00099"></a>00099 
<a name="l00100"></a>00100     @Override
<a name="l00101"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a10408b9aa477cd7e98a4497d05b85a4d">00101</a>     <span class="keyword">public</span> String <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a10408b9aa477cd7e98a4497d05b85a4d" title="Gets the purpose of this object.">getPurposeString</a>() {
<a name="l00102"></a>00102         <span class="keywordflow">return</span> <span class="stringliteral">"Hoeffding Tree or VFDT."</span>;
<a name="l00103"></a>00103     }
<a name="l00104"></a>00104 
<a name="l00105"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a12848d8306fe08f8e7ebd4d726c99d38">00105</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_int_option.html" title="Int option.">IntOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a12848d8306fe08f8e7ebd4d726c99d38">maxByteSizeOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_int_option.html" title="Int option.">IntOption</a>(<span class="stringliteral">"maxByteSize"</span>, <span class="charliteral">'m'</span>,
<a name="l00106"></a>00106             <span class="stringliteral">"Maximum memory consumed by the tree."</span>, 33554432, 0,
<a name="l00107"></a>00107             Integer.MAX_VALUE);
<a name="l00108"></a>00108 
<a name="l00109"></a>00109     <span class="comment">/*</span>
<a name="l00110"></a>00110 <span class="comment">     * public MultiChoiceOption numericEstimatorOption = new MultiChoiceOption(</span>
<a name="l00111"></a>00111 <span class="comment">     * "numericEstimator", 'n', "Numeric estimator to use.", new String[]{</span>
<a name="l00112"></a>00112 <span class="comment">     * "GAUSS10", "GAUSS100", "GK10", "GK100", "GK1000", "VFML10", "VFML100",</span>
<a name="l00113"></a>00113 <span class="comment">     * "VFML1000", "BINTREE"}, new String[]{ "Gaussian approximation evaluating</span>
<a name="l00114"></a>00114 <span class="comment">     * 10 splitpoints", "Gaussian approximation evaluating 100 splitpoints",</span>
<a name="l00115"></a>00115 <span class="comment">     * "Greenwald-Khanna quantile summary with 10 tuples", "Greenwald-Khanna</span>
<a name="l00116"></a>00116 <span class="comment">     * quantile summary with 100 tuples", "Greenwald-Khanna quantile summary</span>
<a name="l00117"></a>00117 <span class="comment">     * with 1000 tuples", "VFML method with 10 bins", "VFML method with 100</span>
<a name="l00118"></a>00118 <span class="comment">     * bins", "VFML method with 1000 bins", "Exhaustive binary tree"}, 0);</span>
<a name="l00119"></a>00119 <span class="comment">     */</span>
<a name="l00120"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a0e24d0d950b6d45b65aeec01dde7a721">00120</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_class_option.html" title="Class option.">ClassOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a0e24d0d950b6d45b65aeec01dde7a721">numericEstimatorOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_class_option.html" title="Class option.">ClassOption</a>(<span class="stringliteral">"numericEstimator"</span>,
<a name="l00121"></a>00121             <span class="charliteral">'n'</span>, <span class="stringliteral">"Numeric estimator to use."</span>, <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1attributeclassobservers_1_1_numeric_attribute_class_observer.html" title="Interface for observing the class data distribution for a numeric attribute.">NumericAttributeClassObserver</a>.class,
<a name="l00122"></a>00122             <span class="stringliteral">"GaussianNumericAttributeClassObserver"</span>);
<a name="l00123"></a>00123 
<a name="l00124"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a213878c678a076b9605bb60754dd8d4b">00124</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_class_option.html" title="Class option.">ClassOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a213878c678a076b9605bb60754dd8d4b">nominalEstimatorOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_class_option.html" title="Class option.">ClassOption</a>(<span class="stringliteral">"nominalEstimator"</span>,
<a name="l00125"></a>00125             <span class="charliteral">'d'</span>, <span class="stringliteral">"Nominal estimator to use."</span>, <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1attributeclassobservers_1_1_discrete_attribute_class_observer.html" title="Interface for observing the class data distribution for a discrete (nominal) attribute.">DiscreteAttributeClassObserver</a>.class,
<a name="l00126"></a>00126             <span class="stringliteral">"NominalAttributeClassObserver"</span>);
<a name="l00127"></a>00127 
<a name="l00128"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a50cb1b33d4610a717ece88780d43ab92">00128</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_int_option.html" title="Int option.">IntOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a50cb1b33d4610a717ece88780d43ab92">memoryEstimatePeriodOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_int_option.html" title="Int option.">IntOption</a>(
<a name="l00129"></a>00129             <span class="stringliteral">"memoryEstimatePeriod"</span>, <span class="charliteral">'e'</span>,
<a name="l00130"></a>00130             <span class="stringliteral">"How many instances between memory consumption checks."</span>, 1000000,
<a name="l00131"></a>00131             0, Integer.MAX_VALUE);
<a name="l00132"></a>00132 
<a name="l00133"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#acc770eb870d8d4e8f7ac3eb4fdea20cf">00133</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_int_option.html" title="Int option.">IntOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#acc770eb870d8d4e8f7ac3eb4fdea20cf">gracePeriodOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_int_option.html" title="Int option.">IntOption</a>(
<a name="l00134"></a>00134             <span class="stringliteral">"gracePeriod"</span>,
<a name="l00135"></a>00135             <span class="charliteral">'g'</span>,
<a name="l00136"></a>00136             <span class="stringliteral">"The number of instances a leaf should observe between split attempts."</span>,
<a name="l00137"></a>00137             200, 0, Integer.MAX_VALUE);
<a name="l00138"></a>00138 
<a name="l00139"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a7fa6fb803b0bcf6ad27505b700ba8a01">00139</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_class_option.html" title="Class option.">ClassOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a7fa6fb803b0bcf6ad27505b700ba8a01">splitCriterionOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_class_option.html" title="Class option.">ClassOption</a>(<span class="stringliteral">"splitCriterion"</span>,
<a name="l00140"></a>00140             <span class="charliteral">'s'</span>, <span class="stringliteral">"Split criterion to use."</span>, <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1splitcriteria_1_1_split_criterion.html" title="Interface for computing splitting criteria.">SplitCriterion</a>.class,
<a name="l00141"></a>00141             <span class="stringliteral">"InfoGainSplitCriterion"</span>);
<a name="l00142"></a>00142 
<a name="l00143"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a8464022fb8594e51d02edbc2be36b167">00143</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_float_option.html" title="Float option.">FloatOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a8464022fb8594e51d02edbc2be36b167">splitConfidenceOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_float_option.html" title="Float option.">FloatOption</a>(
<a name="l00144"></a>00144             <span class="stringliteral">"splitConfidence"</span>,
<a name="l00145"></a>00145             <span class="charliteral">'c'</span>,
<a name="l00146"></a>00146             <span class="stringliteral">"The allowable error in split decision, values closer to 0 will take longer to decide."</span>,
<a name="l00147"></a>00147             0.0000001, 0.0, 1.0);
<a name="l00148"></a>00148 
<a name="l00149"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#ab17cf06fb42a0a1de43579b670a880df">00149</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_float_option.html" title="Float option.">FloatOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#ab17cf06fb42a0a1de43579b670a880df">tieThresholdOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_float_option.html" title="Float option.">FloatOption</a>(<span class="stringliteral">"tieThreshold"</span>,
<a name="l00150"></a>00150             <span class="charliteral">'t'</span>, <span class="stringliteral">"Threshold below which a split will be forced to break ties."</span>,
<a name="l00151"></a>00151             0.05, 0.0, 1.0);
<a name="l00152"></a>00152 
<a name="l00153"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a2a2afc258555b1c052d4b23742b1ed34">00153</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_flag_option.html" title="Flag option.">FlagOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a2a2afc258555b1c052d4b23742b1ed34">binarySplitsOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_flag_option.html" title="Flag option.">FlagOption</a>(<span class="stringliteral">"binarySplits"</span>, <span class="charliteral">'b'</span>,
<a name="l00154"></a>00154             <span class="stringliteral">"Only allow binary splits."</span>);
<a name="l00155"></a>00155 
<a name="l00156"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a18ede9de82d2b231a13695ec09cf8d6b">00156</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_flag_option.html" title="Flag option.">FlagOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a18ede9de82d2b231a13695ec09cf8d6b">stopMemManagementOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_flag_option.html" title="Flag option.">FlagOption</a>(
<a name="l00157"></a>00157             <span class="stringliteral">"stopMemManagement"</span>, <span class="charliteral">'z'</span>,
<a name="l00158"></a>00158             <span class="stringliteral">"Stop growing as soon as memory limit is hit."</span>);
<a name="l00159"></a>00159 
<a name="l00160"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a5a7631453712be129cd015a3d958de18">00160</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_flag_option.html" title="Flag option.">FlagOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a5a7631453712be129cd015a3d958de18">removePoorAttsOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_flag_option.html" title="Flag option.">FlagOption</a>(<span class="stringliteral">"removePoorAtts"</span>,
<a name="l00161"></a>00161             <span class="charliteral">'r'</span>, <span class="stringliteral">"Disable poor attributes."</span>);
<a name="l00162"></a>00162 
<a name="l00163"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a5886687fef889f279dd0c566aca05abd">00163</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_flag_option.html" title="Flag option.">FlagOption</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a5886687fef889f279dd0c566aca05abd">noPrePruneOption</a> = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_flag_option.html" title="Flag option.">FlagOption</a>(<span class="stringliteral">"noPrePrune"</span>, <span class="charliteral">'p'</span>,
<a name="l00164"></a>00164             <span class="stringliteral">"Disable pre-pruning."</span>);
<a name="l00165"></a>00165 
<a name="l00166"></a>00166     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class </span>FoundNode {
<a name="l00167"></a>00167 
<a name="l00168"></a>00168         <span class="keyword">public</span> Node node;
<a name="l00169"></a>00169 
<a name="l00170"></a>00170         <span class="keyword">public</span> SplitNode parent;
<a name="l00171"></a>00171 
<a name="l00172"></a>00172         <span class="keyword">public</span> <span class="keywordtype">int</span> parentBranch;
<a name="l00173"></a>00173 
<a name="l00174"></a>00174         <span class="keyword">public</span> FoundNode(Node node, SplitNode parent, <span class="keywordtype">int</span> parentBranch) {
<a name="l00175"></a>00175             this.node = node;
<a name="l00176"></a>00176             this.parent = parent;
<a name="l00177"></a>00177             this.parentBranch = parentBranch;
<a name="l00178"></a>00178         }
<a name="l00179"></a>00179     }
<a name="l00180"></a>00180 
<a name="l00181"></a>00181     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class </span>Node <span class="keyword">extends</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1_abstract_m_o_a_object.html" title="Abstract MOA Object.">AbstractMOAObject</a> {
<a name="l00182"></a>00182 
<a name="l00183"></a>00183         <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keywordtype">long</span> serialVersionUID = 1L;
<a name="l00184"></a>00184 
<a name="l00185"></a>00185         <span class="keyword">protected</span> DoubleVector observedClassDistribution;
<a name="l00186"></a>00186 
<a name="l00187"></a>00187         <span class="keyword">public</span> Node(<span class="keywordtype">double</span>[] classObservations) {
<a name="l00188"></a>00188             this.observedClassDistribution = <span class="keyword">new</span> DoubleVector(classObservations);
<a name="l00189"></a>00189         }
<a name="l00190"></a>00190 
<a name="l00191"></a>00191         <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a02eae1e84ca29547433c1493a42b96d4">calcByteSize</a>() {
<a name="l00192"></a>00192             <span class="keywordflow">return</span> (<span class="keywordtype">int</span>) (<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_size_of.html" title="Helper class for Maxim Zakharenkov&#39;s SizeOf agent.">SizeOf</a>.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_size_of.html#ad1144569b762c3a8fd33f092f8050dd1" title="Returns the size of the object.">sizeOf</a>(<span class="keyword">this</span>) + <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_size_of.html" title="Helper class for Maxim Zakharenkov&#39;s SizeOf agent.">SizeOf</a>.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_size_of.html#a6090a1b8453f50fd9dec38908df38871" title="Returns the full size of the object.">fullSizeOf</a>(this.observedClassDistribution));
<a name="l00193"></a>00193         }
<a name="l00194"></a>00194 
<a name="l00195"></a>00195         <span class="keyword">public</span> <span class="keywordtype">int</span> calcByteSizeIncludingSubtree() {
<a name="l00196"></a>00196             <span class="keywordflow">return</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a02eae1e84ca29547433c1493a42b96d4">calcByteSize</a>();
<a name="l00197"></a>00197         }
<a name="l00198"></a>00198 
<a name="l00199"></a>00199         <span class="keyword">public</span> <span class="keywordtype">boolean</span> isLeaf() {
<a name="l00200"></a>00200             <span class="keywordflow">return</span> <span class="keyword">true</span>;
<a name="l00201"></a>00201         }
<a name="l00202"></a>00202 
<a name="l00203"></a>00203         <span class="keyword">public</span> FoundNode filterInstanceToLeaf(Instance inst, SplitNode parent,
<a name="l00204"></a>00204                 <span class="keywordtype">int</span> parentBranch) {
<a name="l00205"></a>00205             <span class="keywordflow">return</span> <span class="keyword">new</span> FoundNode(<span class="keyword">this</span>, parent, parentBranch);
<a name="l00206"></a>00206         }
<a name="l00207"></a>00207 
<a name="l00208"></a>00208         <span class="keyword">public</span> <span class="keywordtype">double</span>[] getObservedClassDistribution() {
<a name="l00209"></a>00209             <span class="keywordflow">return</span> this.observedClassDistribution.getArrayCopy();
<a name="l00210"></a>00210         }
<a name="l00211"></a>00211 
<a name="l00212"></a>00212         <span class="keyword">public</span> <span class="keywordtype">double</span>[] getClassVotes(Instance inst, HoeffdingTree ht) {
<a name="l00213"></a>00213             <span class="keywordflow">return</span> this.observedClassDistribution.getArrayCopy();
<a name="l00214"></a>00214         }
<a name="l00215"></a>00215 
<a name="l00216"></a>00216         <span class="keyword">public</span> <span class="keywordtype">boolean</span> observedClassDistributionIsPure() {
<a name="l00217"></a>00217             <span class="keywordflow">return</span> this.observedClassDistribution.numNonZeroEntries() &lt; 2;
<a name="l00218"></a>00218         }
<a name="l00219"></a>00219 
<a name="l00220"></a>00220         <span class="keyword">public</span> <span class="keywordtype">void</span> describeSubtree(HoeffdingTree ht, StringBuilder out,
<a name="l00221"></a>00221                 <span class="keywordtype">int</span> indent) {
<a name="l00222"></a>00222             StringUtils.appendIndented(out, indent, <span class="stringliteral">"Leaf "</span>);
<a name="l00223"></a>00223             out.append(ht.getClassNameString());
<a name="l00224"></a>00224             out.append(<span class="stringliteral">" = "</span>);
<a name="l00225"></a>00225             out.append(ht.getClassLabelString(<span class="keyword">this</span>.observedClassDistribution.maxIndex()));
<a name="l00226"></a>00226             out.append(<span class="stringliteral">" weights: "</span>);
<a name="l00227"></a>00227             this.observedClassDistribution.getSingleLineDescription(out,
<a name="l00228"></a>00228                     ht.treeRoot.observedClassDistribution.numValues());
<a name="l00229"></a>00229             StringUtils.appendNewline(out);
<a name="l00230"></a>00230         }
<a name="l00231"></a>00231 
<a name="l00232"></a>00232         <span class="keyword">public</span> <span class="keywordtype">int</span> subtreeDepth() {
<a name="l00233"></a>00233             <span class="keywordflow">return</span> 0;
<a name="l00234"></a>00234         }
<a name="l00235"></a>00235 
<a name="l00236"></a>00236         <span class="keyword">public</span> <span class="keywordtype">double</span> calculatePromise() {
<a name="l00237"></a>00237             <span class="keywordtype">double</span> totalSeen = this.observedClassDistribution.sumOfValues();
<a name="l00238"></a>00238             <span class="keywordflow">return</span> totalSeen &gt; 0.0 ? (totalSeen - this.observedClassDistribution.getValue(this.observedClassDistribution.maxIndex()))
<a name="l00239"></a>00239                     : 0.0;
<a name="l00240"></a>00240         }
<a name="l00241"></a>00241 
<a name="l00242"></a>00242         @Override
<a name="l00243"></a>00243         <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1_abstract_classifier.html#a5b59e869213128a1b53152e31f3dcbbc" title="Returns a string representation of this object.">getDescription</a>(StringBuilder sb, <span class="keywordtype">int</span> indent) {
<a name="l00244"></a>00244             describeSubtree(null, sb, indent);
<a name="l00245"></a>00245         }
<a name="l00246"></a>00246     }
<a name="l00247"></a>00247 
<a name="l00248"></a>00248     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class </span>SplitNode <span class="keyword">extends</span> Node {
<a name="l00249"></a>00249 
<a name="l00250"></a>00250         <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keywordtype">long</span> serialVersionUID = 1L;
<a name="l00251"></a>00251 
<a name="l00252"></a>00252         <span class="keyword">protected</span> InstanceConditionalTest splitTest;
<a name="l00253"></a>00253 
<a name="l00254"></a>00254         <span class="keyword">protected</span> AutoExpandVector&lt;Node&gt; children = <span class="keyword">new</span> AutoExpandVector&lt;Node&gt;();
<a name="l00255"></a>00255 
<a name="l00256"></a>00256         @Override
<a name="l00257"></a>00257         <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a02eae1e84ca29547433c1493a42b96d4">calcByteSize</a>() {
<a name="l00258"></a>00258             <span class="keywordflow">return</span> super.calcByteSize()
<a name="l00259"></a>00259                     + (int) (SizeOf.sizeOf(<span class="keyword">this</span>.children) + SizeOf.fullSizeOf(this.splitTest));
<a name="l00260"></a>00260         }
<a name="l00261"></a>00261 
<a name="l00262"></a>00262         @Override
<a name="l00263"></a>00263         <span class="keyword">public</span> <span class="keywordtype">int</span> calcByteSizeIncludingSubtree() {
<a name="l00264"></a>00264             <span class="keywordtype">int</span> byteSize = <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a02eae1e84ca29547433c1493a42b96d4">calcByteSize</a>();
<a name="l00265"></a>00265             <span class="keywordflow">for</span> (Node child : this.children) {
<a name="l00266"></a>00266                 <span class="keywordflow">if</span> (child != null) {
<a name="l00267"></a>00267                     byteSize += child.calcByteSizeIncludingSubtree();
<a name="l00268"></a>00268                 }
<a name="l00269"></a>00269             }
<a name="l00270"></a>00270             <span class="keywordflow">return</span> byteSize;
<a name="l00271"></a>00271         }
<a name="l00272"></a>00272 
<a name="l00273"></a>00273         <span class="keyword">public</span> SplitNode(InstanceConditionalTest splitTest,
<a name="l00274"></a>00274                 <span class="keywordtype">double</span>[] classObservations) {
<a name="l00275"></a>00275             super(classObservations);
<a name="l00276"></a>00276             this.splitTest = splitTest;
<a name="l00277"></a>00277         }
<a name="l00278"></a>00278 
<a name="l00279"></a>00279         <span class="keyword">public</span> <span class="keywordtype">int</span> numChildren() {
<a name="l00280"></a>00280             <span class="keywordflow">return</span> this.children.size();
<a name="l00281"></a>00281         }
<a name="l00282"></a>00282 
<a name="l00283"></a>00283         <span class="keyword">public</span> <span class="keywordtype">void</span> setChild(<span class="keywordtype">int</span> index, Node child) {
<a name="l00284"></a>00284             <span class="keywordflow">if</span> ((this.splitTest.maxBranches() &gt;= 0)
<a name="l00285"></a>00285                     &amp;&amp; (index &gt;= this.splitTest.maxBranches())) {
<a name="l00286"></a>00286                 <span class="keywordflow">throw</span> <span class="keyword">new</span> IndexOutOfBoundsException();
<a name="l00287"></a>00287             }
<a name="l00288"></a>00288             this.children.set(index, child);
<a name="l00289"></a>00289         }
<a name="l00290"></a>00290 
<a name="l00291"></a>00291         <span class="keyword">public</span> Node getChild(<span class="keywordtype">int</span> index) {
<a name="l00292"></a>00292             <span class="keywordflow">return</span> this.children.get(index);
<a name="l00293"></a>00293         }
<a name="l00294"></a>00294 
<a name="l00295"></a>00295         <span class="keyword">public</span> <span class="keywordtype">int</span> instanceChildIndex(Instance inst) {
<a name="l00296"></a>00296             <span class="keywordflow">return</span> this.splitTest.branchForInstance(inst);
<a name="l00297"></a>00297         }
<a name="l00298"></a>00298 
<a name="l00299"></a>00299         @Override
<a name="l00300"></a>00300         <span class="keyword">public</span> <span class="keywordtype">boolean</span> isLeaf() {
<a name="l00301"></a>00301             <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00302"></a>00302         }
<a name="l00303"></a>00303 
<a name="l00304"></a>00304         @Override
<a name="l00305"></a>00305         <span class="keyword">public</span> FoundNode filterInstanceToLeaf(Instance inst, SplitNode parent,
<a name="l00306"></a>00306                 <span class="keywordtype">int</span> parentBranch) {
<a name="l00307"></a>00307             <span class="keywordtype">int</span> childIndex = instanceChildIndex(inst);
<a name="l00308"></a>00308             <span class="keywordflow">if</span> (childIndex &gt;= 0) {
<a name="l00309"></a>00309                 Node child = getChild(childIndex);
<a name="l00310"></a>00310                 <span class="keywordflow">if</span> (child != null) {
<a name="l00311"></a>00311                     <span class="keywordflow">return</span> child.filterInstanceToLeaf(inst, <span class="keyword">this</span>, childIndex);
<a name="l00312"></a>00312                 }
<a name="l00313"></a>00313                 <span class="keywordflow">return</span> <span class="keyword">new</span> FoundNode(null, <span class="keyword">this</span>, childIndex);
<a name="l00314"></a>00314             }
<a name="l00315"></a>00315             <span class="keywordflow">return</span> <span class="keyword">new</span> FoundNode(<span class="keyword">this</span>, parent, parentBranch);
<a name="l00316"></a>00316         }
<a name="l00317"></a>00317 
<a name="l00318"></a>00318         @Override
<a name="l00319"></a>00319         <span class="keyword">public</span> <span class="keywordtype">void</span> describeSubtree(HoeffdingTree ht, StringBuilder out,
<a name="l00320"></a>00320                 <span class="keywordtype">int</span> indent) {
<a name="l00321"></a>00321             <span class="keywordflow">for</span> (<span class="keywordtype">int</span> branch = 0; branch &lt; numChildren(); branch++) {
<a name="l00322"></a>00322                 Node child = getChild(branch);
<a name="l00323"></a>00323                 <span class="keywordflow">if</span> (child != null) {
<a name="l00324"></a>00324                     StringUtils.appendIndented(out, indent, <span class="stringliteral">"if "</span>);
<a name="l00325"></a>00325                     out.append(this.splitTest.describeConditionForBranch(branch,
<a name="l00326"></a>00326                             ht.getModelContext()));
<a name="l00327"></a>00327                     out.append(<span class="stringliteral">": "</span>);
<a name="l00328"></a>00328                     StringUtils.appendNewline(out);
<a name="l00329"></a>00329                     child.describeSubtree(ht, out, indent + 2);
<a name="l00330"></a>00330                 }
<a name="l00331"></a>00331             }
<a name="l00332"></a>00332         }
<a name="l00333"></a>00333 
<a name="l00334"></a>00334         @Override
<a name="l00335"></a>00335         <span class="keyword">public</span> <span class="keywordtype">int</span> subtreeDepth() {
<a name="l00336"></a>00336             <span class="keywordtype">int</span> maxChildDepth = 0;
<a name="l00337"></a>00337             <span class="keywordflow">for</span> (Node child : this.children) {
<a name="l00338"></a>00338                 <span class="keywordflow">if</span> (child != null) {
<a name="l00339"></a>00339                     <span class="keywordtype">int</span> depth = child.subtreeDepth();
<a name="l00340"></a>00340                     <span class="keywordflow">if</span> (depth &gt; maxChildDepth) {
<a name="l00341"></a>00341                         maxChildDepth = depth;
<a name="l00342"></a>00342                     }
<a name="l00343"></a>00343                 }
<a name="l00344"></a>00344             }
<a name="l00345"></a>00345             <span class="keywordflow">return</span> maxChildDepth + 1;
<a name="l00346"></a>00346         }
<a name="l00347"></a>00347     }
<a name="l00348"></a>00348 
<a name="l00349"></a>00349     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">abstract</span> <span class="keyword">class </span>LearningNode <span class="keyword">extends</span> Node {
<a name="l00350"></a>00350 
<a name="l00351"></a>00351         <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keywordtype">long</span> serialVersionUID = 1L;
<a name="l00352"></a>00352 
<a name="l00353"></a>00353         <span class="keyword">public</span> LearningNode(<span class="keywordtype">double</span>[] initialClassObservations) {
<a name="l00354"></a>00354             super(initialClassObservations);
<a name="l00355"></a>00355         }
<a name="l00356"></a>00356 
<a name="l00357"></a>00357         <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keywordtype">void</span> learnFromInstance(Instance inst, HoeffdingTree ht);
<a name="l00358"></a>00358     }
<a name="l00359"></a>00359 
<a name="l00360"></a>00360     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class </span>InactiveLearningNode <span class="keyword">extends</span> LearningNode {
<a name="l00361"></a>00361 
<a name="l00362"></a>00362         <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keywordtype">long</span> serialVersionUID = 1L;
<a name="l00363"></a>00363 
<a name="l00364"></a>00364         <span class="keyword">public</span> InactiveLearningNode(<span class="keywordtype">double</span>[] initialClassObservations) {
<a name="l00365"></a>00365             super(initialClassObservations);
<a name="l00366"></a>00366         }
<a name="l00367"></a>00367 
<a name="l00368"></a>00368         @Override
<a name="l00369"></a>00369         <span class="keyword">public</span> <span class="keywordtype">void</span> learnFromInstance(Instance inst, HoeffdingTree ht) {
<a name="l00370"></a>00370             this.observedClassDistribution.addToValue((<span class="keywordtype">int</span>) inst.classValue(),
<a name="l00371"></a>00371                     inst.weight());
<a name="l00372"></a>00372         }
<a name="l00373"></a>00373     }
<a name="l00374"></a>00374 
<a name="l00375"></a>00375     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class </span>ActiveLearningNode <span class="keyword">extends</span> LearningNode {
<a name="l00376"></a>00376 
<a name="l00377"></a>00377         <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keywordtype">long</span> serialVersionUID = 1L;
<a name="l00378"></a>00378 
<a name="l00379"></a>00379         <span class="keyword">protected</span> <span class="keywordtype">double</span> weightSeenAtLastSplitEvaluation;
<a name="l00380"></a>00380 
<a name="l00381"></a>00381         <span class="keyword">protected</span> AutoExpandVector&lt;AttributeClassObserver&gt; attributeObservers = <span class="keyword">new</span> AutoExpandVector&lt;AttributeClassObserver&gt;();
<a name="l00382"></a>00382 
<a name="l00383"></a>00383         <span class="keyword">public</span> ActiveLearningNode(<span class="keywordtype">double</span>[] initialClassObservations) {
<a name="l00384"></a>00384             super(initialClassObservations);
<a name="l00385"></a>00385             this.weightSeenAtLastSplitEvaluation = getWeightSeen();
<a name="l00386"></a>00386         }
<a name="l00387"></a>00387 
<a name="l00388"></a>00388         @Override
<a name="l00389"></a>00389         <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a02eae1e84ca29547433c1493a42b96d4">calcByteSize</a>() {
<a name="l00390"></a>00390             <span class="keywordflow">return</span> super.calcByteSize()
<a name="l00391"></a>00391                     + (int) (SizeOf.fullSizeOf(<span class="keyword">this</span>.attributeObservers));
<a name="l00392"></a>00392         }
<a name="l00393"></a>00393 
<a name="l00394"></a>00394         @Override
<a name="l00395"></a>00395         <span class="keyword">public</span> <span class="keywordtype">void</span> learnFromInstance(Instance inst, HoeffdingTree ht) {
<a name="l00396"></a>00396             this.observedClassDistribution.addToValue((<span class="keywordtype">int</span>) inst.classValue(),
<a name="l00397"></a>00397                     inst.weight());
<a name="l00398"></a>00398             <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; inst.numAttributes() - 1; i++) {
<a name="l00399"></a>00399                 <span class="keywordtype">int</span> instAttIndex = <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1_abstract_classifier.html#a5cd97fb8e5751d48de011c81f45466d4" title="Gets the index of the attribute in the instance, given the index of the attribute in the learner...">modelAttIndexToInstanceAttIndex</a>(i, inst);
<a name="l00400"></a>00400                 AttributeClassObserver obs = this.attributeObservers.get(i);
<a name="l00401"></a>00401                 <span class="keywordflow">if</span> (obs == null) {
<a name="l00402"></a>00402                     obs = inst.attribute(instAttIndex).isNominal() ? ht.newNominalClassObserver() : ht.newNumericClassObserver();
<a name="l00403"></a>00403                     this.attributeObservers.set(i, obs);
<a name="l00404"></a>00404                 }
<a name="l00405"></a>00405                 obs.observeAttributeClass(inst.value(instAttIndex), (int) inst.classValue(), inst.weight());
<a name="l00406"></a>00406             }
<a name="l00407"></a>00407         }
<a name="l00408"></a>00408 
<a name="l00409"></a>00409         <span class="keyword">public</span> <span class="keywordtype">double</span> getWeightSeen() {
<a name="l00410"></a>00410             <span class="keywordflow">return</span> this.observedClassDistribution.sumOfValues();
<a name="l00411"></a>00411         }
<a name="l00412"></a>00412 
<a name="l00413"></a>00413         <span class="keyword">public</span> <span class="keywordtype">double</span> getWeightSeenAtLastSplitEvaluation() {
<a name="l00414"></a>00414             <span class="keywordflow">return</span> this.weightSeenAtLastSplitEvaluation;
<a name="l00415"></a>00415         }
<a name="l00416"></a>00416 
<a name="l00417"></a>00417         <span class="keyword">public</span> <span class="keywordtype">void</span> setWeightSeenAtLastSplitEvaluation(<span class="keywordtype">double</span> weight) {
<a name="l00418"></a>00418             this.weightSeenAtLastSplitEvaluation = weight;
<a name="l00419"></a>00419         }
<a name="l00420"></a>00420 
<a name="l00421"></a>00421         <span class="keyword">public</span> AttributeSplitSuggestion[] getBestSplitSuggestions(
<a name="l00422"></a>00422                 SplitCriterion criterion, HoeffdingTree ht) {
<a name="l00423"></a>00423             List&lt;AttributeSplitSuggestion&gt; bestSuggestions = <span class="keyword">new</span> LinkedList&lt;AttributeSplitSuggestion&gt;();
<a name="l00424"></a>00424             <span class="keywordtype">double</span>[] preSplitDist = this.observedClassDistribution.getArrayCopy();
<a name="l00425"></a>00425             <span class="keywordflow">if</span> (!ht.noPrePruneOption.isSet()) {
<a name="l00426"></a>00426                 <span class="comment">// add null split as an option</span>
<a name="l00427"></a>00427                 bestSuggestions.add(<span class="keyword">new</span> AttributeSplitSuggestion(null,
<a name="l00428"></a>00428                         <span class="keyword">new</span> <span class="keywordtype">double</span>[0][], criterion.getMeritOfSplit(
<a name="l00429"></a>00429                         preSplitDist,
<a name="l00430"></a>00430                         <span class="keyword">new</span> <span class="keywordtype">double</span>[][]{preSplitDist})));
<a name="l00431"></a>00431             }
<a name="l00432"></a>00432             <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; this.attributeObservers.size(); i++) {
<a name="l00433"></a>00433                 AttributeClassObserver obs = this.attributeObservers.get(i);
<a name="l00434"></a>00434                 <span class="keywordflow">if</span> (obs != null) {
<a name="l00435"></a>00435                     AttributeSplitSuggestion bestSuggestion = obs.getBestEvaluatedSplitSuggestion(criterion,
<a name="l00436"></a>00436                             preSplitDist, i, ht.binarySplitsOption.isSet());
<a name="l00437"></a>00437                     <span class="keywordflow">if</span> (bestSuggestion != null) {
<a name="l00438"></a>00438                         bestSuggestions.add(bestSuggestion);
<a name="l00439"></a>00439                     }
<a name="l00440"></a>00440                 }
<a name="l00441"></a>00441             }
<a name="l00442"></a>00442             <span class="keywordflow">return</span> bestSuggestions.toArray(<span class="keyword">new</span> AttributeSplitSuggestion[bestSuggestions.size()]);
<a name="l00443"></a>00443         }
<a name="l00444"></a>00444 
<a name="l00445"></a>00445         <span class="keyword">public</span> <span class="keywordtype">void</span> disableAttribute(<span class="keywordtype">int</span> attIndex) {
<a name="l00446"></a>00446             this.attributeObservers.set(attIndex,
<a name="l00447"></a>00447                     <span class="keyword">new</span> NullAttributeClassObserver());
<a name="l00448"></a>00448         }
<a name="l00449"></a>00449     }
<a name="l00450"></a>00450 
<a name="l00451"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a38db455b3c2b7047eb2c0add4cedd69f">00451</a>     <span class="keyword">protected</span> Node <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a38db455b3c2b7047eb2c0add4cedd69f">treeRoot</a>;
<a name="l00452"></a>00452 
<a name="l00453"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a8fa182f3214ee44c2be73dace51eb522">00453</a>     <span class="keyword">protected</span> <span class="keywordtype">int</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a8fa182f3214ee44c2be73dace51eb522">decisionNodeCount</a>;
<a name="l00454"></a>00454 
<a name="l00455"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a1c8f0808411ec2692b749d99b3e2e75f">00455</a>     <span class="keyword">protected</span> <span class="keywordtype">int</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a1c8f0808411ec2692b749d99b3e2e75f">activeLeafNodeCount</a>;
<a name="l00456"></a>00456 
<a name="l00457"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a650ceca27f9ffc37daec703fdb49e393">00457</a>     <span class="keyword">protected</span> <span class="keywordtype">int</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a650ceca27f9ffc37daec703fdb49e393">inactiveLeafNodeCount</a>;
<a name="l00458"></a>00458 
<a name="l00459"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a2ae55e22134948bef212b687076bf03e">00459</a>     <span class="keyword">protected</span> <span class="keywordtype">double</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a2ae55e22134948bef212b687076bf03e">inactiveLeafByteSizeEstimate</a>;
<a name="l00460"></a>00460 
<a name="l00461"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a8c8319f16098fa4baf3380229196fff3">00461</a>     <span class="keyword">protected</span> <span class="keywordtype">double</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a8c8319f16098fa4baf3380229196fff3">activeLeafByteSizeEstimate</a>;
<a name="l00462"></a>00462 
<a name="l00463"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a2c7139fc8c7069e7e302bbe91a53cbad">00463</a>     <span class="keyword">protected</span> <span class="keywordtype">double</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a2c7139fc8c7069e7e302bbe91a53cbad">byteSizeEstimateOverheadFraction</a>;
<a name="l00464"></a>00464 
<a name="l00465"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a134db729b79c2596b450e09c98e4b546">00465</a>     <span class="keyword">protected</span> <span class="keywordtype">boolean</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a134db729b79c2596b450e09c98e4b546">growthAllowed</a>;
<a name="l00466"></a>00466 
<a name="l00467"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a02eae1e84ca29547433c1493a42b96d4">00467</a>     <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a02eae1e84ca29547433c1493a42b96d4">calcByteSize</a>() {
<a name="l00468"></a>00468         <span class="keywordtype">int</span> size = (int) <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_size_of.html" title="Helper class for Maxim Zakharenkov&#39;s SizeOf agent.">SizeOf</a>.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_size_of.html#ad1144569b762c3a8fd33f092f8050dd1" title="Returns the size of the object.">sizeOf</a>(<span class="keyword">this</span>);
<a name="l00469"></a>00469         <span class="keywordflow">if</span> (this.treeRoot != null) {
<a name="l00470"></a>00470             size += this.treeRoot.calcByteSizeIncludingSubtree();
<a name="l00471"></a>00471         }
<a name="l00472"></a>00472         <span class="keywordflow">return</span> size;
<a name="l00473"></a>00473     }
<a name="l00474"></a>00474 
<a name="l00475"></a>00475     @Override
<a name="l00476"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#aaebcba3152efce82222189a1ae3e94d7">00476</a>     <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#aaebcba3152efce82222189a1ae3e94d7" title="Gets the memory size of this object.">measureByteSize</a>() {
<a name="l00477"></a>00477         <span class="keywordflow">return</span> calcByteSize();
<a name="l00478"></a>00478     }
<a name="l00479"></a>00479 
<a name="l00480"></a>00480     @Override
<a name="l00481"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a723e3ef22f599a2b2450a1c84db6a989">00481</a>     <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a723e3ef22f599a2b2450a1c84db6a989" title="Resets this classifier.">resetLearningImpl</a>() {
<a name="l00482"></a>00482         this.treeRoot = null;
<a name="l00483"></a>00483         this.decisionNodeCount = 0;
<a name="l00484"></a>00484         this.activeLeafNodeCount = 0;
<a name="l00485"></a>00485         this.inactiveLeafNodeCount = 0;
<a name="l00486"></a>00486         this.inactiveLeafByteSizeEstimate = 0.0;
<a name="l00487"></a>00487         this.activeLeafByteSizeEstimate = 0.0;
<a name="l00488"></a>00488         this.byteSizeEstimateOverheadFraction = 1.0;
<a name="l00489"></a>00489         this.growthAllowed = <span class="keyword">true</span>;
<a name="l00490"></a>00490         <span class="keywordflow">if</span> (this.leafpredictionOption.getChosenIndex()&gt;0) { 
<a name="l00491"></a>00491             this.removePoorAttsOption = null;
<a name="l00492"></a>00492         }
<a name="l00493"></a>00493     }
<a name="l00494"></a>00494 
<a name="l00495"></a>00495     @Override
<a name="l00496"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#ab13e136d761801002a42fa109b994f28">00496</a>     <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#ab13e136d761801002a42fa109b994f28" title="Trains this classifier incrementally using the given instance.">trainOnInstanceImpl</a>(Instance inst) {
<a name="l00497"></a>00497         <span class="keywordflow">if</span> (this.treeRoot == null) {
<a name="l00498"></a>00498             this.treeRoot = newLearningNode();
<a name="l00499"></a>00499             this.activeLeafNodeCount = 1;
<a name="l00500"></a>00500         }
<a name="l00501"></a>00501         FoundNode foundNode = this.treeRoot.filterInstanceToLeaf(inst, null, -1);
<a name="l00502"></a>00502         Node leafNode = foundNode.node;
<a name="l00503"></a>00503         <span class="keywordflow">if</span> (leafNode == null) {
<a name="l00504"></a>00504             leafNode = newLearningNode();
<a name="l00505"></a>00505             foundNode.parent.setChild(foundNode.parentBranch, leafNode);
<a name="l00506"></a>00506             this.activeLeafNodeCount++;
<a name="l00507"></a>00507         }
<a name="l00508"></a>00508         <span class="keywordflow">if</span> (leafNode instanceof LearningNode) {
<a name="l00509"></a>00509             LearningNode learningNode = (LearningNode) leafNode;
<a name="l00510"></a>00510             learningNode.learnFromInstance(inst, <span class="keyword">this</span>);
<a name="l00511"></a>00511             <span class="keywordflow">if</span> (this.growthAllowed
<a name="l00512"></a>00512                     &amp;&amp; (learningNode instanceof ActiveLearningNode)) {
<a name="l00513"></a>00513                 ActiveLearningNode activeLearningNode = (ActiveLearningNode) learningNode;
<a name="l00514"></a>00514                 <span class="keywordtype">double</span> weightSeen = activeLearningNode.getWeightSeen();
<a name="l00515"></a>00515                 <span class="keywordflow">if</span> (weightSeen
<a name="l00516"></a>00516                         - activeLearningNode.getWeightSeenAtLastSplitEvaluation() &gt;= this.gracePeriodOption.getValue()) {
<a name="l00517"></a>00517                     attemptToSplit(activeLearningNode, foundNode.parent,
<a name="l00518"></a>00518                             foundNode.parentBranch);
<a name="l00519"></a>00519                     activeLearningNode.setWeightSeenAtLastSplitEvaluation(weightSeen);
<a name="l00520"></a>00520                 }
<a name="l00521"></a>00521             }
<a name="l00522"></a>00522         }
<a name="l00523"></a>00523         <span class="keywordflow">if</span> (this.trainingWeightSeenByModel
<a name="l00524"></a>00524                 % this.memoryEstimatePeriodOption.getValue() == 0) {
<a name="l00525"></a>00525             estimateModelByteSizes();
<a name="l00526"></a>00526         }
<a name="l00527"></a>00527     }
<a name="l00528"></a>00528 
<a name="l00529"></a>00529     @Override
<a name="l00530"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a2bcda84a5c9a13d9d8baf06246a25354">00530</a>     <span class="keyword">public</span> <span class="keywordtype">double</span>[] <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a2bcda84a5c9a13d9d8baf06246a25354" title="Predicts the class memberships for a given instance.">getVotesForInstance</a>(Instance inst) {
<a name="l00531"></a>00531         <span class="keywordflow">if</span> (this.treeRoot != null) {
<a name="l00532"></a>00532             FoundNode foundNode = this.treeRoot.filterInstanceToLeaf(inst,
<a name="l00533"></a>00533                     null, -1);
<a name="l00534"></a>00534             Node leafNode = foundNode.node;
<a name="l00535"></a>00535             <span class="keywordflow">if</span> (leafNode == null) {
<a name="l00536"></a>00536                 leafNode = foundNode.parent;
<a name="l00537"></a>00537             }
<a name="l00538"></a>00538             <span class="keywordflow">return</span> leafNode.getClassVotes(inst, <span class="keyword">this</span>);
<a name="l00539"></a>00539         }
<a name="l00540"></a>00540         <span class="keywordflow">return</span> <span class="keyword">new</span> <span class="keywordtype">double</span>[0];
<a name="l00541"></a>00541     }
<a name="l00542"></a>00542 
<a name="l00543"></a>00543     @Override
<a name="l00544"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a085ffc26aa24ca5bd311cada7f57f80c">00544</a>     <span class="keyword">protected</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_measurement.html" title="Class for storing an evaluation measurement.">Measurement</a>[] <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a085ffc26aa24ca5bd311cada7f57f80c" title="Gets the current measurements of this classifier.">getModelMeasurementsImpl</a>() {
<a name="l00545"></a>00545         <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_measurement.html" title="Class for storing an evaluation measurement.">Measurement</a>[]{
<a name="l00546"></a>00546                     <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_measurement.html" title="Class for storing an evaluation measurement.">Measurement</a>(<span class="stringliteral">"tree size (nodes)"</span>, this.decisionNodeCount
<a name="l00547"></a>00547                     + this.activeLeafNodeCount + this.inactiveLeafNodeCount),
<a name="l00548"></a>00548                     <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_measurement.html" title="Class for storing an evaluation measurement.">Measurement</a>(<span class="stringliteral">"tree size (leaves)"</span>, this.activeLeafNodeCount
<a name="l00549"></a>00549                     + this.inactiveLeafNodeCount),
<a name="l00550"></a>00550                     <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_measurement.html" title="Class for storing an evaluation measurement.">Measurement</a>(<span class="stringliteral">"active learning leaves"</span>,
<a name="l00551"></a>00551                     this.activeLeafNodeCount),
<a name="l00552"></a>00552                     <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_measurement.html" title="Class for storing an evaluation measurement.">Measurement</a>(<span class="stringliteral">"tree depth"</span>, measureTreeDepth()),
<a name="l00553"></a>00553                     <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_measurement.html" title="Class for storing an evaluation measurement.">Measurement</a>(<span class="stringliteral">"active leaf byte size estimate"</span>,
<a name="l00554"></a>00554                     this.activeLeafByteSizeEstimate),
<a name="l00555"></a>00555                     <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_measurement.html" title="Class for storing an evaluation measurement.">Measurement</a>(<span class="stringliteral">"inactive leaf byte size estimate"</span>,
<a name="l00556"></a>00556                     this.inactiveLeafByteSizeEstimate),
<a name="l00557"></a>00557                     <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_measurement.html" title="Class for storing an evaluation measurement.">Measurement</a>(<span class="stringliteral">"byte size estimate overhead"</span>,
<a name="l00558"></a>00558                     this.byteSizeEstimateOverheadFraction)};
<a name="l00559"></a>00559     }
<a name="l00560"></a>00560 
<a name="l00561"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#ab0dc37f3e597d79f13f4fa03244cb8b6">00561</a>     <span class="keyword">public</span> <span class="keywordtype">int</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#ab0dc37f3e597d79f13f4fa03244cb8b6">measureTreeDepth</a>() {
<a name="l00562"></a>00562         <span class="keywordflow">if</span> (this.treeRoot != null) {
<a name="l00563"></a>00563             <span class="keywordflow">return</span> this.treeRoot.subtreeDepth();
<a name="l00564"></a>00564         }
<a name="l00565"></a>00565         <span class="keywordflow">return</span> 0;
<a name="l00566"></a>00566     }
<a name="l00567"></a>00567 
<a name="l00568"></a>00568     @Override
<a name="l00569"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a5afb7cd5b68065d3ad6af6b42b3aea3a">00569</a>     <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a5afb7cd5b68065d3ad6af6b42b3aea3a" title="Returns a string representation of the model.">getModelDescription</a>(StringBuilder out, <span class="keywordtype">int</span> indent) {
<a name="l00570"></a>00570         this.treeRoot.describeSubtree(<span class="keyword">this</span>, out, indent);
<a name="l00571"></a>00571     }
<a name="l00572"></a>00572 
<a name="l00573"></a>00573     @Override
<a name="l00574"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a94f1683d7e1ddf82d2c46cc5f9ee0c0e">00574</a>     <span class="keyword">public</span> <span class="keywordtype">boolean</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a94f1683d7e1ddf82d2c46cc5f9ee0c0e" title="Gets whether this classifier needs a random seed.">isRandomizable</a>() {
<a name="l00575"></a>00575         <span class="keywordflow">return</span> <span class="keyword">false</span>;
<a name="l00576"></a>00576     }
<a name="l00577"></a>00577 
<a name="l00578"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a742268cf32558a51a6434bc4cfb4a2d2">00578</a>     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">double</span> computeHoeffdingBound(<span class="keywordtype">double</span> range, <span class="keywordtype">double</span> confidence,
<a name="l00579"></a>00579             <span class="keywordtype">double</span> n) {
<a name="l00580"></a>00580         <span class="keywordflow">return</span> Math.sqrt(((range * range) * Math.log(1.0 / confidence))
<a name="l00581"></a>00581                 / (2.0 * n));
<a name="l00582"></a>00582     }
<a name="l00583"></a>00583 
<a name="l00584"></a>00584     <span class="comment">//Procedure added for Hoeffding Adaptive Trees (ADWIN)</span>
<a name="l00585"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a6b0f2baf66d908237c1e0bf9afab0b00">00585</a>     <span class="keyword">protected</span> SplitNode newSplitNode(<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1conditionaltests_1_1_instance_conditional_test.html" title="Abstract conditional test for instances to use to split nodes in Hoeffding trees.">InstanceConditionalTest</a> splitTest,
<a name="l00586"></a>00586             <span class="keywordtype">double</span>[] classObservations) {
<a name="l00587"></a>00587         <span class="keywordflow">return</span> <span class="keyword">new</span> SplitNode(splitTest, classObservations);
<a name="l00588"></a>00588     }
<a name="l00589"></a>00589 
<a name="l00590"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a3df864b09b54a38dc4af72457af2df9a">00590</a>     <span class="keyword">protected</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1attributeclassobservers_1_1_attribute_class_observer.html" title="Interface for observing the class data distribution for an attribute.">AttributeClassObserver</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a3df864b09b54a38dc4af72457af2df9a">newNominalClassObserver</a>() {
<a name="l00591"></a>00591         <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1attributeclassobservers_1_1_attribute_class_observer.html" title="Interface for observing the class data distribution for an attribute.">AttributeClassObserver</a> nominalClassObserver = (<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1attributeclassobservers_1_1_attribute_class_observer.html" title="Interface for observing the class data distribution for an attribute.">AttributeClassObserver</a>) getPreparedClassOption(this.nominalEstimatorOption);
<a name="l00592"></a>00592         <span class="keywordflow">return</span> (<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1attributeclassobservers_1_1_attribute_class_observer.html" title="Interface for observing the class data distribution for an attribute.">AttributeClassObserver</a>) nominalClassObserver.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1options_1_1_option_handler.html#a96fd6b38c56141192588e19e05e43f17" title="This method produces a copy of this object.">copy</a>();
<a name="l00593"></a>00593     }
<a name="l00594"></a>00594 
<a name="l00595"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a43dc714f59552a9e6814c79cb1cff40b">00595</a>     <span class="keyword">protected</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1attributeclassobservers_1_1_attribute_class_observer.html" title="Interface for observing the class data distribution for an attribute.">AttributeClassObserver</a> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a43dc714f59552a9e6814c79cb1cff40b">newNumericClassObserver</a>() {
<a name="l00596"></a>00596         <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1attributeclassobservers_1_1_attribute_class_observer.html" title="Interface for observing the class data distribution for an attribute.">AttributeClassObserver</a> numericClassObserver = (<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1attributeclassobservers_1_1_attribute_class_observer.html" title="Interface for observing the class data distribution for an attribute.">AttributeClassObserver</a>) getPreparedClassOption(this.numericEstimatorOption);
<a name="l00597"></a>00597         <span class="keywordflow">return</span> (<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1attributeclassobservers_1_1_attribute_class_observer.html" title="Interface for observing the class data distribution for an attribute.">AttributeClassObserver</a>) numericClassObserver.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1options_1_1_option_handler.html#a96fd6b38c56141192588e19e05e43f17" title="This method produces a copy of this object.">copy</a>();
<a name="l00598"></a>00598     }
<a name="l00599"></a>00599 
<a name="l00600"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a1167e8f332be16f1b9d07c55d94bd0ac">00600</a>     <span class="keyword">protected</span> <span class="keywordtype">void</span> attemptToSplit(ActiveLearningNode node, SplitNode parent,
<a name="l00601"></a>00601             <span class="keywordtype">int</span> parentIndex) {
<a name="l00602"></a>00602         <span class="keywordflow">if</span> (!node.observedClassDistributionIsPure()) {
<a name="l00603"></a>00603             <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1splitcriteria_1_1_split_criterion.html" title="Interface for computing splitting criteria.">SplitCriterion</a> splitCriterion = (<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1splitcriteria_1_1_split_criterion.html" title="Interface for computing splitting criteria.">SplitCriterion</a>) getPreparedClassOption(this.splitCriterionOption);
<a name="l00604"></a>00604             <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html" title="Class for computing attribute split suggestions given a split test.">AttributeSplitSuggestion</a>[] bestSplitSuggestions = node.getBestSplitSuggestions(splitCriterion, <span class="keyword">this</span>);
<a name="l00605"></a>00605             Arrays.sort(bestSplitSuggestions);
<a name="l00606"></a>00606             <span class="keywordtype">boolean</span> shouldSplit = <span class="keyword">false</span>;
<a name="l00607"></a>00607             <span class="keywordflow">if</span> (bestSplitSuggestions.length &lt; 2) {
<a name="l00608"></a>00608                 shouldSplit = bestSplitSuggestions.length &gt; 0;
<a name="l00609"></a>00609             } <span class="keywordflow">else</span> {
<a name="l00610"></a>00610                 <span class="keywordtype">double</span> hoeffdingBound = computeHoeffdingBound(splitCriterion.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/interfacemoa_1_1classifiers_1_1core_1_1splitcriteria_1_1_split_criterion.html#af4602783ac8df6d5fed77c9b828aa4b4" title="Computes the range of splitting merit.">getRangeOfMerit</a>(node.getObservedClassDistribution()),
<a name="l00611"></a>00611                         this.splitConfidenceOption.getValue(), node.getWeightSeen());
<a name="l00612"></a>00612                 <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html" title="Class for computing attribute split suggestions given a split test.">AttributeSplitSuggestion</a> bestSuggestion = bestSplitSuggestions[bestSplitSuggestions.length - 1];
<a name="l00613"></a>00613                 <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html" title="Class for computing attribute split suggestions given a split test.">AttributeSplitSuggestion</a> secondBestSuggestion = bestSplitSuggestions[bestSplitSuggestions.length - 2];
<a name="l00614"></a>00614                 <span class="keywordflow">if</span> ((bestSuggestion.merit - secondBestSuggestion.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html#a4ca19b144787ff01d446355dcb95fcdc">merit</a> &gt; hoeffdingBound)
<a name="l00615"></a>00615                         || (hoeffdingBound &lt; this.tieThresholdOption.getValue())) {
<a name="l00616"></a>00616                     shouldSplit = <span class="keyword">true</span>;
<a name="l00617"></a>00617                 }
<a name="l00618"></a>00618                 <span class="comment">// }</span>
<a name="l00619"></a>00619                 <span class="keywordflow">if</span> ((this.removePoorAttsOption != null)
<a name="l00620"></a>00620                         &amp;&amp; this.removePoorAttsOption.isSet()) {
<a name="l00621"></a>00621                     Set&lt;Integer&gt; poorAtts = <span class="keyword">new</span> HashSet&lt;Integer&gt;();
<a name="l00622"></a>00622                     <span class="comment">// scan 1 - add any poor to set</span>
<a name="l00623"></a>00623                     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; bestSplitSuggestions.length; i++) {
<a name="l00624"></a>00624                         <span class="keywordflow">if</span> (bestSplitSuggestions[i].splitTest != null) {
<a name="l00625"></a>00625                             <span class="keywordtype">int</span>[] splitAtts = bestSplitSuggestions[i].<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html#a5f3ae3a12fdc128e8a86a1fa2ddafffc">splitTest</a>.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1conditionaltests_1_1_instance_conditional_test.html#af3a4e494b9e2e3f981b45a237858f4cd" title="Returns an array with the attributes that the test depends on.">getAttsTestDependsOn</a>();
<a name="l00626"></a>00626                             <span class="keywordflow">if</span> (splitAtts.length == 1) {
<a name="l00627"></a>00627                                 <span class="keywordflow">if</span> (bestSuggestion.merit
<a name="l00628"></a>00628                                         - bestSplitSuggestions[i].<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html#a4ca19b144787ff01d446355dcb95fcdc">merit</a> &gt; hoeffdingBound) {
<a name="l00629"></a>00629                                     poorAtts.add(<span class="keyword">new</span> Integer(splitAtts[0]));
<a name="l00630"></a>00630                                 }
<a name="l00631"></a>00631                             }
<a name="l00632"></a>00632                         }
<a name="l00633"></a>00633                     }
<a name="l00634"></a>00634                     <span class="comment">// scan 2 - remove good ones from set</span>
<a name="l00635"></a>00635                     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; bestSplitSuggestions.length; i++) {
<a name="l00636"></a>00636                         <span class="keywordflow">if</span> (bestSplitSuggestions[i].splitTest != null) {
<a name="l00637"></a>00637                             <span class="keywordtype">int</span>[] splitAtts = bestSplitSuggestions[i].<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html#a5f3ae3a12fdc128e8a86a1fa2ddafffc">splitTest</a>.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1conditionaltests_1_1_instance_conditional_test.html#af3a4e494b9e2e3f981b45a237858f4cd" title="Returns an array with the attributes that the test depends on.">getAttsTestDependsOn</a>();
<a name="l00638"></a>00638                             <span class="keywordflow">if</span> (splitAtts.length == 1) {
<a name="l00639"></a>00639                                 <span class="keywordflow">if</span> (bestSuggestion.merit
<a name="l00640"></a>00640                                         - bestSplitSuggestions[i].<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html#a4ca19b144787ff01d446355dcb95fcdc">merit</a> &lt; hoeffdingBound) {
<a name="l00641"></a>00641                                     poorAtts.remove(<span class="keyword">new</span> Integer(splitAtts[0]));
<a name="l00642"></a>00642                                 }
<a name="l00643"></a>00643                             }
<a name="l00644"></a>00644                         }
<a name="l00645"></a>00645                     }
<a name="l00646"></a>00646                     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> poorAtt : poorAtts) {
<a name="l00647"></a>00647                         node.disableAttribute(poorAtt);
<a name="l00648"></a>00648                     }
<a name="l00649"></a>00649                 }
<a name="l00650"></a>00650             }
<a name="l00651"></a>00651             <span class="keywordflow">if</span> (shouldSplit) {
<a name="l00652"></a>00652                 <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html" title="Class for computing attribute split suggestions given a split test.">AttributeSplitSuggestion</a> splitDecision = bestSplitSuggestions[bestSplitSuggestions.length - 1];
<a name="l00653"></a>00653                 <span class="keywordflow">if</span> (splitDecision.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html#a5f3ae3a12fdc128e8a86a1fa2ddafffc">splitTest</a> == null) {
<a name="l00654"></a>00654                     <span class="comment">// preprune - null wins</span>
<a name="l00655"></a>00655                     deactivateLearningNode(node, parent, parentIndex);
<a name="l00656"></a>00656                 } <span class="keywordflow">else</span> {
<a name="l00657"></a>00657                     SplitNode newSplit = newSplitNode(splitDecision.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html#a5f3ae3a12fdc128e8a86a1fa2ddafffc">splitTest</a>,
<a name="l00658"></a>00658                             node.getObservedClassDistribution());
<a name="l00659"></a>00659                     <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; splitDecision.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html#afcced50eef2981b7a7a30e2a40086e41">numSplits</a>(); i++) {
<a name="l00660"></a>00660                         Node newChild = newLearningNode(splitDecision.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html#ae715b4c66ed0aa5f3d05e5a101c93a61">resultingClassDistributionFromSplit</a>(i));
<a name="l00661"></a>00661                         newSplit.setChild(i, newChild);
<a name="l00662"></a>00662                     }
<a name="l00663"></a>00663                     this.activeLeafNodeCount--;
<a name="l00664"></a>00664                     this.decisionNodeCount++;
<a name="l00665"></a>00665                     this.activeLeafNodeCount += splitDecision.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1core_1_1_attribute_split_suggestion.html#afcced50eef2981b7a7a30e2a40086e41">numSplits</a>();
<a name="l00666"></a>00666                     <span class="keywordflow">if</span> (parent == null) {
<a name="l00667"></a>00667                         this.treeRoot = newSplit;
<a name="l00668"></a>00668                     } <span class="keywordflow">else</span> {
<a name="l00669"></a>00669                         parent.setChild(parentIndex, newSplit);
<a name="l00670"></a>00670                     }
<a name="l00671"></a>00671                 }
<a name="l00672"></a>00672                 <span class="comment">// manage memory</span>
<a name="l00673"></a>00673                 enforceTrackerLimit();
<a name="l00674"></a>00674             }
<a name="l00675"></a>00675         }
<a name="l00676"></a>00676     }
<a name="l00677"></a>00677 
<a name="l00678"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#ad3ce5f45815584286223e5e1280bcbb0">00678</a>     <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#ad3ce5f45815584286223e5e1280bcbb0">enforceTrackerLimit</a>() {
<a name="l00679"></a>00679         <span class="keywordflow">if</span> ((this.inactiveLeafNodeCount &gt; 0)
<a name="l00680"></a>00680                 || ((this.activeLeafNodeCount * this.activeLeafByteSizeEstimate + this.inactiveLeafNodeCount
<a name="l00681"></a>00681                 * this.inactiveLeafByteSizeEstimate)
<a name="l00682"></a>00682                 * this.byteSizeEstimateOverheadFraction &gt; this.maxByteSizeOption.getValue())) {
<a name="l00683"></a>00683             <span class="keywordflow">if</span> (this.stopMemManagementOption.isSet()) {
<a name="l00684"></a>00684                 this.growthAllowed = <span class="keyword">false</span>;
<a name="l00685"></a>00685                 <span class="keywordflow">return</span>;
<a name="l00686"></a>00686             }
<a name="l00687"></a>00687             FoundNode[] learningNodes = findLearningNodes();
<a name="l00688"></a>00688             Arrays.sort(learningNodes, <span class="keyword">new</span> Comparator&lt;FoundNode&gt;() {
<a name="l00689"></a>00689 
<a name="l00690"></a>00690                 @Override
<a name="l00691"></a>00691                 <span class="keyword">public</span> <span class="keywordtype">int</span> compare(FoundNode fn1, FoundNode fn2) {
<a name="l00692"></a>00692                     <span class="keywordflow">return</span> Double.compare(fn1.node.calculatePromise(), fn2.node.calculatePromise());
<a name="l00693"></a>00693                 }
<a name="l00694"></a>00694             });
<a name="l00695"></a>00695             <span class="keywordtype">int</span> maxActive = 0;
<a name="l00696"></a>00696             <span class="keywordflow">while</span> (maxActive &lt; learningNodes.length) {
<a name="l00697"></a>00697                 maxActive++;
<a name="l00698"></a>00698                 <span class="keywordflow">if</span> ((maxActive * this.activeLeafByteSizeEstimate + (learningNodes.length - maxActive)
<a name="l00699"></a>00699                         * this.inactiveLeafByteSizeEstimate)
<a name="l00700"></a>00700                         * this.byteSizeEstimateOverheadFraction &gt; this.maxByteSizeOption.getValue()) {
<a name="l00701"></a>00701                     maxActive--;
<a name="l00702"></a>00702                     <span class="keywordflow">break</span>;
<a name="l00703"></a>00703                 }
<a name="l00704"></a>00704             }
<a name="l00705"></a>00705             <span class="keywordtype">int</span> cutoff = learningNodes.length - maxActive;
<a name="l00706"></a>00706             <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; cutoff; i++) {
<a name="l00707"></a>00707                 <span class="keywordflow">if</span> (learningNodes[i].node instanceof ActiveLearningNode) {
<a name="l00708"></a>00708                     deactivateLearningNode(
<a name="l00709"></a>00709                             (ActiveLearningNode) learningNodes[i].node,
<a name="l00710"></a>00710                             learningNodes[i].parent,
<a name="l00711"></a>00711                             learningNodes[i].parentBranch);
<a name="l00712"></a>00712                 }
<a name="l00713"></a>00713             }
<a name="l00714"></a>00714             <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = cutoff; i &lt; learningNodes.length; i++) {
<a name="l00715"></a>00715                 <span class="keywordflow">if</span> (learningNodes[i].node instanceof InactiveLearningNode) {
<a name="l00716"></a>00716                     activateLearningNode(
<a name="l00717"></a>00717                             (InactiveLearningNode) learningNodes[i].node,
<a name="l00718"></a>00718                             learningNodes[i].parent,
<a name="l00719"></a>00719                             learningNodes[i].parentBranch);
<a name="l00720"></a>00720                 }
<a name="l00721"></a>00721             }
<a name="l00722"></a>00722         }
<a name="l00723"></a>00723     }
<a name="l00724"></a>00724 
<a name="l00725"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#acee5c29f3539f6b07e51dbdd22f6ea9f">00725</a>     <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#acee5c29f3539f6b07e51dbdd22f6ea9f">estimateModelByteSizes</a>() {
<a name="l00726"></a>00726         FoundNode[] learningNodes = findLearningNodes();
<a name="l00727"></a>00727         <span class="keywordtype">long</span> totalActiveSize = 0;
<a name="l00728"></a>00728         <span class="keywordtype">long</span> totalInactiveSize = 0;
<a name="l00729"></a>00729         <span class="keywordflow">for</span> (FoundNode foundNode : learningNodes) {
<a name="l00730"></a>00730             <span class="keywordflow">if</span> (foundNode.node instanceof ActiveLearningNode) {
<a name="l00731"></a>00731                 totalActiveSize += <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_size_of.html" title="Helper class for Maxim Zakharenkov&#39;s SizeOf agent.">SizeOf</a>.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_size_of.html#a6090a1b8453f50fd9dec38908df38871" title="Returns the full size of the object.">fullSizeOf</a>(foundNode.node);
<a name="l00732"></a>00732             } <span class="keywordflow">else</span> {
<a name="l00733"></a>00733                 totalInactiveSize += <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_size_of.html" title="Helper class for Maxim Zakharenkov&#39;s SizeOf agent.">SizeOf</a>.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1core_1_1_size_of.html#a6090a1b8453f50fd9dec38908df38871" title="Returns the full size of the object.">fullSizeOf</a>(foundNode.node);
<a name="l00734"></a>00734             }
<a name="l00735"></a>00735         }
<a name="l00736"></a>00736         <span class="keywordflow">if</span> (totalActiveSize &gt; 0) {
<a name="l00737"></a>00737             this.activeLeafByteSizeEstimate = (double) totalActiveSize
<a name="l00738"></a>00738                     / this.activeLeafNodeCount;
<a name="l00739"></a>00739         }
<a name="l00740"></a>00740         <span class="keywordflow">if</span> (totalInactiveSize &gt; 0) {
<a name="l00741"></a>00741             this.inactiveLeafByteSizeEstimate = (double) totalInactiveSize
<a name="l00742"></a>00742                     / this.inactiveLeafNodeCount;
<a name="l00743"></a>00743         }
<a name="l00744"></a>00744         <span class="keywordtype">int</span> actualModelSize = this.measureByteSize();
<a name="l00745"></a>00745         <span class="keywordtype">double</span> estimatedModelSize = (this.activeLeafNodeCount
<a name="l00746"></a>00746                 * this.activeLeafByteSizeEstimate + this.inactiveLeafNodeCount
<a name="l00747"></a>00747                 * this.inactiveLeafByteSizeEstimate);
<a name="l00748"></a>00748         this.byteSizeEstimateOverheadFraction = actualModelSize
<a name="l00749"></a>00749                 / estimatedModelSize;
<a name="l00750"></a>00750         <span class="keywordflow">if</span> (actualModelSize &gt; this.maxByteSizeOption.getValue()) {
<a name="l00751"></a>00751             enforceTrackerLimit();
<a name="l00752"></a>00752         }
<a name="l00753"></a>00753     }
<a name="l00754"></a>00754 
<a name="l00755"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#aeb158b73da65b2184d87f09896b66308">00755</a>     <span class="keyword">public</span> <span class="keywordtype">void</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#aeb158b73da65b2184d87f09896b66308">deactivateAllLeaves</a>() {
<a name="l00756"></a>00756         FoundNode[] learningNodes = findLearningNodes();
<a name="l00757"></a>00757         <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; learningNodes.length; i++) {
<a name="l00758"></a>00758             <span class="keywordflow">if</span> (learningNodes[i].node instanceof ActiveLearningNode) {
<a name="l00759"></a>00759                 deactivateLearningNode(
<a name="l00760"></a>00760                         (ActiveLearningNode) learningNodes[i].node,
<a name="l00761"></a>00761                         learningNodes[i].parent, learningNodes[i].parentBranch);
<a name="l00762"></a>00762             }
<a name="l00763"></a>00763         }
<a name="l00764"></a>00764     }
<a name="l00765"></a>00765 
<a name="l00766"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#aa2bf9fba6c0b3e4b76158001680c5327">00766</a>     <span class="keyword">protected</span> <span class="keywordtype">void</span> deactivateLearningNode(ActiveLearningNode toDeactivate,
<a name="l00767"></a>00767             SplitNode parent, <span class="keywordtype">int</span> parentBranch) {
<a name="l00768"></a>00768         Node newLeaf = <span class="keyword">new</span> InactiveLearningNode(toDeactivate.getObservedClassDistribution());
<a name="l00769"></a>00769         <span class="keywordflow">if</span> (parent == null) {
<a name="l00770"></a>00770             this.treeRoot = newLeaf;
<a name="l00771"></a>00771         } <span class="keywordflow">else</span> {
<a name="l00772"></a>00772             parent.setChild(parentBranch, newLeaf);
<a name="l00773"></a>00773         }
<a name="l00774"></a>00774         this.activeLeafNodeCount--;
<a name="l00775"></a>00775         this.inactiveLeafNodeCount++;
<a name="l00776"></a>00776     }
<a name="l00777"></a>00777 
<a name="l00778"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a0fb3d76800bd3b5a39f3e8c3324187b8">00778</a>     <span class="keyword">protected</span> <span class="keywordtype">void</span> activateLearningNode(InactiveLearningNode toActivate,
<a name="l00779"></a>00779             SplitNode parent, <span class="keywordtype">int</span> parentBranch) {
<a name="l00780"></a>00780         Node newLeaf = newLearningNode(toActivate.getObservedClassDistribution());
<a name="l00781"></a>00781         <span class="keywordflow">if</span> (parent == null) {
<a name="l00782"></a>00782             this.treeRoot = newLeaf;
<a name="l00783"></a>00783         } <span class="keywordflow">else</span> {
<a name="l00784"></a>00784             parent.setChild(parentBranch, newLeaf);
<a name="l00785"></a>00785         }
<a name="l00786"></a>00786         this.activeLeafNodeCount++;
<a name="l00787"></a>00787         this.inactiveLeafNodeCount--;
<a name="l00788"></a>00788     }
<a name="l00789"></a>00789 
<a name="l00790"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#ad056309d625aeda1975b850885fe15b6">00790</a>     <span class="keyword">protected</span> FoundNode[] <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#ad056309d625aeda1975b850885fe15b6">findLearningNodes</a>() {
<a name="l00791"></a>00791         List&lt;FoundNode&gt; foundList = <span class="keyword">new</span> LinkedList&lt;FoundNode&gt;();
<a name="l00792"></a>00792         findLearningNodes(this.treeRoot, null, -1, foundList);
<a name="l00793"></a>00793         <span class="keywordflow">return</span> foundList.toArray(<span class="keyword">new</span> FoundNode[foundList.size()]);
<a name="l00794"></a>00794     }
<a name="l00795"></a>00795 
<a name="l00796"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#aebce11aac82747ff58a9375b11b7c857">00796</a>     <span class="keyword">protected</span> <span class="keywordtype">void</span> findLearningNodes(Node node, SplitNode parent,
<a name="l00797"></a>00797             <span class="keywordtype">int</span> parentBranch, List&lt;FoundNode&gt; found) {
<a name="l00798"></a>00798         <span class="keywordflow">if</span> (node != null) {
<a name="l00799"></a>00799             <span class="keywordflow">if</span> (node instanceof LearningNode) {
<a name="l00800"></a>00800                 found.add(<span class="keyword">new</span> FoundNode(node, parent, parentBranch));
<a name="l00801"></a>00801             }
<a name="l00802"></a>00802             <span class="keywordflow">if</span> (node instanceof SplitNode) {
<a name="l00803"></a>00803                 SplitNode splitNode = (SplitNode) node;
<a name="l00804"></a>00804                 <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; splitNode.numChildren(); i++) {
<a name="l00805"></a>00805                     findLearningNodes(splitNode.getChild(i), splitNode, i,
<a name="l00806"></a>00806                             found);
<a name="l00807"></a>00807                 }
<a name="l00808"></a>00808             }
<a name="l00809"></a>00809         }
<a name="l00810"></a>00810     }
<a name="l00811"></a>00811 
<a name="l00812"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a348416ff8a5c2444e5e815191e15f63f">00812</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_multi_choice_option.html" title="Multi choice option.">MultiChoiceOption</a> leafpredictionOption = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_multi_choice_option.html" title="Multi choice option.">MultiChoiceOption</a>(
<a name="l00813"></a>00813             <span class="stringliteral">"leafprediction"</span>, <span class="charliteral">'l'</span>, <span class="stringliteral">"Leaf prediction to use."</span>, <span class="keyword">new</span> String[]{
<a name="l00814"></a>00814                 <span class="stringliteral">"MC"</span>, <span class="stringliteral">"NB"</span>, <span class="stringliteral">"NBAdaptive"</span>}, <span class="keyword">new</span> String[]{
<a name="l00815"></a>00815                 <span class="stringliteral">"Majority class"</span>,
<a name="l00816"></a>00816                 <span class="stringliteral">"Naive Bayes"</span>,
<a name="l00817"></a>00817                 <span class="stringliteral">"Naive Bayes Adaptive"</span>}, 2);
<a name="l00818"></a>00818 
<a name="l00819"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a53e901c48cc00ed10742189b76b850ca">00819</a>     <span class="keyword">public</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_int_option.html" title="Int option.">IntOption</a> nbThresholdOption = <span class="keyword">new</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_int_option.html" title="Int option.">IntOption</a>(
<a name="l00820"></a>00820             <span class="stringliteral">"nbThreshold"</span>,
<a name="l00821"></a>00821             <span class="charliteral">'q'</span>,
<a name="l00822"></a>00822             <span class="stringliteral">"The number of instances a leaf should observe before permitting Naive Bayes."</span>,
<a name="l00823"></a>00823             0, 0, Integer.MAX_VALUE);
<a name="l00824"></a>00824 
<a name="l00825"></a>00825     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class </span>LearningNodeNB <span class="keyword">extends</span> ActiveLearningNode {
<a name="l00826"></a>00826 
<a name="l00827"></a>00827         <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keywordtype">long</span> serialVersionUID = 1L;
<a name="l00828"></a>00828 
<a name="l00829"></a>00829         <span class="keyword">public</span> LearningNodeNB(<span class="keywordtype">double</span>[] initialClassObservations) {
<a name="l00830"></a>00830             super(initialClassObservations);
<a name="l00831"></a>00831         }
<a name="l00832"></a>00832 
<a name="l00833"></a>00833         @Override
<a name="l00834"></a>00834         <span class="keyword">public</span> <span class="keywordtype">double</span>[] getClassVotes(Instance inst, <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html" title="Hoeffding Tree or VFDT.">HoeffdingTree</a> ht) {
<a name="l00835"></a>00835             <span class="keywordflow">if</span> (getWeightSeen() &gt;= ht.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a53e901c48cc00ed10742189b76b850ca">nbThresholdOption</a>.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1options_1_1_int_option.html#affae8787274b44ab7616d46b8d6c831a">getValue</a>()) {
<a name="l00836"></a>00836                 <span class="keywordflow">return</span> <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1bayes_1_1_naive_bayes.html" title="Naive Bayes incremental learner.">NaiveBayes</a>.<a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1bayes_1_1_naive_bayes.html#aaeb3aa564394e10a043c31963096ac78">doNaiveBayesPrediction</a>(inst,
<a name="l00837"></a>00837                         this.observedClassDistribution,
<a name="l00838"></a>00838                         this.attributeObservers);
<a name="l00839"></a>00839             }
<a name="l00840"></a>00840             <span class="keywordflow">return</span> super.getClassVotes(inst, ht);
<a name="l00841"></a>00841         }
<a name="l00842"></a>00842 
<a name="l00843"></a>00843         @Override
<a name="l00844"></a>00844         <span class="keyword">public</span> <span class="keywordtype">void</span> disableAttribute(<span class="keywordtype">int</span> attIndex) {
<a name="l00845"></a>00845             <span class="comment">// should not disable poor atts - they are used in NB calc</span>
<a name="l00846"></a>00846         }
<a name="l00847"></a>00847     }
<a name="l00848"></a>00848 
<a name="l00849"></a>00849     <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class </span>LearningNodeNBAdaptive <span class="keyword">extends</span> LearningNodeNB {
<a name="l00850"></a>00850 
<a name="l00851"></a>00851         <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keywordtype">long</span> serialVersionUID = 1L;
<a name="l00852"></a>00852 
<a name="l00853"></a>00853         <span class="keyword">protected</span> <span class="keywordtype">double</span> mcCorrectWeight = 0.0;
<a name="l00854"></a>00854 
<a name="l00855"></a>00855         <span class="keyword">protected</span> <span class="keywordtype">double</span> nbCorrectWeight = 0.0;
<a name="l00856"></a>00856 
<a name="l00857"></a>00857         <span class="keyword">public</span> LearningNodeNBAdaptive(<span class="keywordtype">double</span>[] initialClassObservations) {
<a name="l00858"></a>00858             super(initialClassObservations);
<a name="l00859"></a>00859         }
<a name="l00860"></a>00860 
<a name="l00861"></a>00861         @Override
<a name="l00862"></a>00862         <span class="keyword">public</span> <span class="keywordtype">void</span> learnFromInstance(Instance inst, HoeffdingTree ht) {
<a name="l00863"></a>00863             <span class="keywordtype">int</span> trueClass = (int) inst.classValue();
<a name="l00864"></a>00864             <span class="keywordflow">if</span> (this.observedClassDistribution.maxIndex() == trueClass) {
<a name="l00865"></a>00865                 this.mcCorrectWeight += inst.weight();
<a name="l00866"></a>00866             }
<a name="l00867"></a>00867             <span class="keywordflow">if</span> (Utils.maxIndex(NaiveBayes.doNaiveBayesPrediction(inst,
<a name="l00868"></a>00868                     <span class="keyword">this</span>.observedClassDistribution, <span class="keyword">this</span>.attributeObservers)) == trueClass) {
<a name="l00869"></a>00869                 this.nbCorrectWeight += inst.weight();
<a name="l00870"></a>00870             }
<a name="l00871"></a>00871             super.learnFromInstance(inst, ht);
<a name="l00872"></a>00872         }
<a name="l00873"></a>00873 
<a name="l00874"></a>00874         @Override
<a name="l00875"></a>00875         <span class="keyword">public</span> <span class="keywordtype">double</span>[] getClassVotes(Instance inst, HoeffdingTree ht) {
<a name="l00876"></a>00876             <span class="keywordflow">if</span> (this.mcCorrectWeight &gt; this.nbCorrectWeight) {
<a name="l00877"></a>00877                 <span class="keywordflow">return</span> this.observedClassDistribution.getArrayCopy();
<a name="l00878"></a>00878             }
<a name="l00879"></a>00879             <span class="keywordflow">return</span> NaiveBayes.doNaiveBayesPrediction(inst,
<a name="l00880"></a>00880                     this.observedClassDistribution, this.attributeObservers);
<a name="l00881"></a>00881         }
<a name="l00882"></a>00882     }
<a name="l00883"></a>00883 
<a name="l00884"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#af20989c02f545ac313c9544b526ad8f5">00884</a>     <span class="keyword">protected</span> LearningNode <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#af20989c02f545ac313c9544b526ad8f5">newLearningNode</a>() {
<a name="l00885"></a>00885         <span class="keywordflow">return</span> newLearningNode(<span class="keyword">new</span> <span class="keywordtype">double</span>[0]);
<a name="l00886"></a>00886     }
<a name="l00887"></a>00887 
<a name="l00888"></a><a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a0ea016216fd20d78d3b4ed89f62c2f11">00888</a>     <span class="keyword">protected</span> LearningNode <a class="code" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/classmoa_1_1classifiers_1_1trees_1_1_hoeffding_tree.html#a0ea016216fd20d78d3b4ed89f62c2f11">newLearningNode</a>(<span class="keywordtype">double</span>[] initialClassObservations) {
<a name="l00889"></a>00889         LearningNode ret;
<a name="l00890"></a>00890         <span class="keywordtype">int</span> predictionOption = this.leafpredictionOption.getChosenIndex();
<a name="l00891"></a>00891         <span class="keywordflow">if</span> (predictionOption == 0) { <span class="comment">//MC</span>
<a name="l00892"></a>00892             ret = <span class="keyword">new</span> ActiveLearningNode(initialClassObservations);
<a name="l00893"></a>00893         } <span class="keywordflow">else</span> <span class="keywordflow">if</span> (predictionOption == 1) { <span class="comment">//NB</span>
<a name="l00894"></a>00894             ret = <span class="keyword">new</span> LearningNodeNB(initialClassObservations);
<a name="l00895"></a>00895         } <span class="keywordflow">else</span> { <span class="comment">//NBAdaptive</span>
<a name="l00896"></a>00896             ret = <span class="keyword">new</span> LearningNodeNBAdaptive(initialClassObservations);
<a name="l00897"></a>00897         }
<a name="l00898"></a>00898         <span class="keywordflow">return</span> ret;
<a name="l00899"></a>00899     }
<a name="l00900"></a>00900 }
</pre></div></div>
</div>
  <div id="nav-path" class="navpath">
    <ul>
      <li class="navelem"><a class="el" href="http://www.cs.waikato.ac.nz/~abifet/MOA/API/_hoeffding_tree_8java.html">HoeffdingTree.java</a>      </li>
      <li class="footer">Generated on Sun Mar 11 2012 09:41:50 for MOA by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="./MOA_ HoeffdingTree_files/doxygen.png" alt="doxygen"></a> 1.7.4 </li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow" onmouseover="return searchBox.OnSearchSelectShow()" onmouseout="return searchBox.OnSearchSelectHide()" onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">•</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Enumerations</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" name="MSearchResults" id="MSearchResults">
</iframe>
</div>




</body><div id="coFrameDiv" style="height:0px;display:none;"><iframe id="coToolbarFrame" src="./MOA_ HoeffdingTree_files/placeholder.html" style="height:0px;width:100%;display:none;"></iframe></div></html>